{"version":3,"sources":["firebase/firebase.js","navigation/header.js","firebase/data/Hours.js","hours/hoursConstants.js","hours/HoursHeader.js","hours/HoursFooter.js","hours/HoursCell.js","hours/HoursTableHeader.js","hours/hoursGrid.js","hours/HoursContainer.js","navigation/preLoad.js","admin/overview/constants.js","admin/overview/overviewHeader.js","admin/overview/overviewToolbar.js","admin/admin.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","appBar","backgroundColor","menuButton","marginRight","spacing","title","flexGrow","Header","profile","classes","className","root","AppBar","position","Toolbar","Typography","variant","Button","component","NavLink","color","to","startIcon","displayName","month","year","db","firestore","collection","where","get","response","docs","map","doc","row","data","id","profileId","columns","description","enabled","months","years","formControl","HoursConstants","currentYear","Date","getFullYear","currentMonth","getMonth","HoursHeader","isTemplate","client","project","expandColumns","handleInputChange","applyTemplate","FormControl","InputLabel","Select","labelId","defaultValue","onChange","event","target","value","MenuItem","key","TextField","label","FormControlLabel","control","Switch","checked","onClick","HoursFooter","days","length","TableFooter","TableRow","TableCell","column","align","x","reduce","total","currentValue","Number","getTotal","HoursCell","handleChange","save","day","inputProps","style","textAlign","daysInput","numberValue","isNaN","handleHoursInput","onBlur","onKeyDown","closest","parentNode","index","Array","from","children","indexOf","keyCode","nextRow","nextSibling","querySelector","focus","prevRow","previousSibling","size","HoursTableHead","TableHead","HoursGrid","isNotWeekend","dayOfTheWeek","getRowClass","TableContainer","Paper","Table","stickyHeader","aria-label","TableBody","date","getDay","scope","i","HoursContainer","state","snackbarOpen","isLoading","fetchMonth","a","setState","Hours","instance","getDaysInMonth","fetchTemplate","exists","getTemplateWeek","templateDays","mergedDays","sameDay","find","templateDay","Object","keys","forEach","item","name","includes","rows","push","worked","overtime","sick","holiday","publicHoliday","available","education","other","standBy","kilometers","explanation","submitHours","set","then","docRef","prevState","catch","error","console","submitTemplate","props","handleClose","reason","this","type","daysInAMonth","getDate","noValidate","autoComplete","setMonth","Snackbar","anchorOrigin","vertical","horizontal","onClose","open","autoHideDuration","message","Component","height","minHeight","width","background","paper","marginTop","display","flexDirection","alignItems","avatar","margin","PreLoad","Container","maxWidth","CssBaseline","Avatar","src","alt","numeric","disablePadding","OverviewHeader","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","padding","Checkbox","indeterminate","Constants","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","paddingRight","marginLeft","highlight","palette","secondary","main","lighten","light","text","primary","dark","flex","OverviewToolbar","onChangeDate","React","useState","setYear","clsx","Tooltip","IconButton","descendingComparator","b","marginBottom","table","minWidth","border","clip","overflow","top","OverviewTable","setOrder","setOrderBy","selected","setSelected","setIsLoading","getData","list","log","initRow","cell","category","getTotalHoursPerCategory","useEffect","aria-labelledby","newSelecteds","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","isItemSelected","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","createMuiTheme","activeItem","hide","toolbar","justifyContent","mixins","content","TemplateHeader","Boolean","window","location","hostname","match","ReactDOM","render","setProfile","provider","auth","OAuthProvider","setCustomParameters","tenant","signInWithPopup","result","fetchProfile","user","goLogin","snapshot","microsoftId","uid","createNewProfile","newProfile","email","add","ThemeProvider","path","exact","isAdmin","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1303d351.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAkvaF-lqt8ZxyBwcNlwrHhj-Pp3Ev54pI\",\n    authDomain: \"codezilla-hours.firebaseapp.com\",\n    databaseURL: \"https://codezilla-hours.firebaseio.com\",\n    projectId: \"codezilla-hours\",\n    storageBucket: \"codezilla-hours.appspot.com\",\n    messagingSenderId: \"634823174203\",\n    appId: \"1:634823174203:web:ca40af276111cfae66541e\",\n    measurementId: \"G-DR0KK33WCW\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: \"#7d518\",\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header({ profile }) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        CODEZILLA Hours\n                    </Typography>\n                    <Button component={NavLink} color=\"inherit\" to=\"/\">\n                        Urenstaat\n                    </Button>\n                    <Button component={NavLink} color=\"inherit\" to=\"/template\">\n                        Template\n                    </Button>\n                    <Button\n                        color=\"inherit\"\n                        component={NavLink}\n                        to=\"/admin\"\n                        startIcon={<AccountCircle />}\n                    >\n                        {profile.displayName}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import firebase from \"../firebase\";\n\nexport default {\n    async getHours(month, year) {\n        const db = firebase.firestore();\n        const response = await db\n            .collection(\"months\")\n            .where(\"month\", \"==\", month)\n            .where(\"year\", \"==\", year)\n            .get();\n        return response.docs.map(doc => {\n            const row = doc.data();\n            row.id = doc.id;\n            return row;\n        });\n    },\n    async getHoursForProfile(month, year, profileId) {\n        const db = firebase.firestore();\n        const response = await db\n            .collection(\"months\")\n            .where(\"month\", \"==\", month)\n            .where(\"year\", \"==\", year)\n            .where(\"profileId\", \"==\", profileId)\n            .get();\n        return response.docs.map(doc => {\n            const row = doc.data();\n            row.id = doc.id;\n            return row;\n        });\n    },\n};\n","export const columns = [\n    {\n        id: \"worked\",\n        description: \"Gewerkt\",\n        enabled: true\n    },\n    {\n        id: \"overtime\",\n        description: \"Overwerk\",\n        enabled: true\n    },\n    {\n        id: \"sick\",\n        description: \"Ziek\",\n        enabled: true\n    },\n    {\n        id: \"holiday\",\n        description: \"Verlof\",\n        enabled: true\n    },\n    {\n        id: \"publicHoliday\",\n        description: \"Feestdag\",\n        enabled: true\n    },\n    {\n        id: \"available\",\n        description: \"Beschikbaar\",\n        enabled: false\n    },\n    {\n        id: \"education\",\n        description: \"Opleiding\",\n        enabled: false\n    },\n    {\n        id: \"other\",\n        description: \"Overig\",\n        enabled: false\n    },\n    {\n        id: \"standBy\",\n        description: \"StandBy\",\n        enabled: false\n    },\n    {\n        id: \"kilometers\",\n        description: \"Kilometers\",\n        enabled: false\n    }\n];\n\nexport const months = [\n    {\n        id: 1,\n        description: \"Januari\"\n    },\n    {\n        id: 2,\n        description: \"Februari\"\n    },\n    {\n        id: 3,\n        description: \"Maart\"\n    },\n    {\n        id: 4,\n        description: \"April\"\n    },\n    {\n        id: 5,\n        description: \"Mei\"\n    },\n    {\n        id: 6,\n        description: \"Juni\"\n    },\n    {\n        id: 7,\n        description: \"Juli\"\n    },\n    {\n        id: 8,\n        description: \"Augustus\"\n    },\n    {\n        id: 9,\n        description: \"September\"\n    },\n    {\n        id: 10,\n        description: \"Oktober\"\n    },\n    {\n        id: 11,\n        description: \"November\"\n    },\n    {\n        id: 12,\n        description: \"December\"\n    }\n];\n\nexport const years = [2020, 2021, 2022, 2023, 2025];\n","import React from \"react\";\nimport {\n    Toolbar,\n    Grid,\n    FormControl,\n    FormControlLabel,\n    InputLabel,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport * as HoursConstants from \"./hoursConstants\";\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst months = HoursConstants.months;\nconst years = HoursConstants.years;\nconst currentYear = new Date().getFullYear();\nconst currentMonth = new Date().getMonth() + 1;\n\nconst HoursHeader = ({\n    isTemplate,\n    client,\n    project,\n    expandColumns,\n    handleInputChange,\n    applyTemplate,\n}) => {\n    const classes = useStyles();\n\n    if (isTemplate) return null;\n    return (\n        <Toolbar>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"select-month-label\">Maand</InputLabel>\n                <Select\n                    labelId=\"select-month-label\"\n                    id=\"select-month-label\"\n                    defaultValue={currentMonth}\n                    onChange={event =>\n                        handleInputChange(\"month\", event.target.value)\n                    }\n                >\n                    {months.map(month => {\n                        return (\n                            <MenuItem value={month.id} key={month.id}>\n                                {month.description}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"select-year-label\">Jaar</InputLabel>\n                <Select\n                    labelId=\"select-year-label\"\n                    id=\"select-year-label\"\n                    defaultValue={currentYear}\n                    onChange={event =>\n                        handleInputChange(\"year\", event.target.value)\n                    }\n                >\n                    {years.map(year => {\n                        return (\n                            <MenuItem value={year} key={year}>\n                                {year}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n            <TextField\n                className={classes.formControl}\n                id=\"client\"\n                label=\"Klant\"\n                value={client}\n                onChange={event =>\n                    handleInputChange(\"client\", event.target.value)\n                }\n            />\n            <TextField\n                className={classes.formControl}\n                id=\"project\"\n                label=\"Project\"\n                value={project}\n                onChange={event =>\n                    handleInputChange(\"project\", event.target.value)\n                }\n            />\n\n            <FormControlLabel\n                className={classes.formControl}\n                control={\n                    <Switch\n                        checked={expandColumns}\n                        onChange={event =>\n                            handleInputChange(\n                                \"expandColumns\",\n                                event.target.checked,\n                            )\n                        }\n                        color=\"primary\"\n                    />\n                }\n                label=\"Toon alle velden\"\n            />\n            <Button\n                className={classes.formControl}\n                variant=\"contained\"\n                onClick={applyTemplate}\n            >\n                {\"Gebruik Template\"}\n            </Button>\n        </Toolbar>\n    );\n};\n\nexport default HoursHeader;\n","import React from \"react\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport * as HoursConstants from \"./hoursConstants\";\n\nconst columns = HoursConstants.columns;\n\nconst HoursFooter = ({ expandColumns, days }) => {\n    const getTotal = column => {\n        const values = days.map(x => x[column]);\n        return values.reduce((total, currentValue) => {\n            return Number(total) + Number(currentValue);\n        });\n    };\n\n    if (!days.length) return null;\n\n    return (\n        <TableFooter>\n            <TableRow>\n                <TableCell> Totaal</TableCell>\n                {columns.map(column => {\n                    if (!column.enabled && !expandColumns) {\n                        return null;\n                    }\n                    return (\n                        <TableCell align=\"right\" key={\"footer-\" + column.id}>\n                            {getTotal(column.id)}\n                        </TableCell>\n                    );\n                })}\n                <TableCell align=\"right\"></TableCell>\n            </TableRow>\n        </TableFooter>\n    );\n};\n\nexport default HoursFooter;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst HoursCell = ({ row, column, days, handleChange, isTemplate, save }) => {\n    const handleHoursInput = (value, column, day) => {\n        const daysInput = [...days];\n        const numberValue = Number(value);\n        daysInput[day][column] = isNaN(numberValue) ? \"\" : numberValue;\n        handleChange(\"days\", daysInput);\n    };\n\n    /* Jump with arrow keys to another field */\n    const onKeyDown = event => {\n        const column = event.target.closest(\"td\");\n        const row = column.parentNode;\n        const index = Array.from(row.children).indexOf(column);\n\n        switch (event.keyCode) {\n            case 40:\n                /* arrow key down */\n                const nextRow = row.nextSibling;\n                if (nextRow !== null) {\n                    nextRow.children[index].querySelector(\"input\").focus();\n                }\n                break;\n            case 38:\n                /* arrow key up */\n                const prevRow = row.previousSibling;\n                if (prevRow !== null) {\n                    prevRow.children[index].querySelector(\"input\").focus();\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    if (!row) return null;\n\n    return (\n        <TableCell align=\"right\" key={row.day + \"-\" + column}>\n            <TextField\n                id={column}\n                inputProps={{\n                    style: {\n                        textAlign: \"right\",\n                    },\n                    day: row.day,\n                }}\n                value={row[column]}\n                onChange={event =>\n                    handleHoursInput(event.target.value, column, row.day - 1)\n                }\n                onBlur={() => save(isTemplate)}\n                onKeyDown={onKeyDown}\n                size=\"small\"\n            />\n        </TableCell>\n    );\n};\n\nexport default HoursCell;\n","import React from \"react\";\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core\";\nimport { columns } from \"./hoursConstants\";\n\nconst HoursTableHead = ({ expandColumns }) => {\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell></TableCell>\n                {columns.map(column => {\n                    if (!column.enabled && !expandColumns) {\n                        return null;\n                    }\n                    return (\n                        <TableCell align=\"right\" key={\"header-\" + column.id}>\n                            {column.description}\n                        </TableCell>\n                    );\n                })}\n                <TableCell align=\"right\">Toelichting</TableCell>\n            </TableRow>\n        </TableHead>\n    );\n};\n\nexport default HoursTableHead;\n","import React from \"react\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    TextField,\n    Paper,\n} from \"@material-ui/core\";\n\nimport * as HoursConstants from \"./hoursConstants\";\nimport HoursFooter from \"./HoursFooter\";\nimport HoursCell from \"./HoursCell\";\nimport HoursTableHead from \"./HoursTableHeader\";\n\nconst columns = HoursConstants.columns;\n\nconst HoursGrid = ({ expandColumns, days, handleChange, save, isTemplate }) => {\n    const isNotWeekend = dayOfTheWeek => {\n        return dayOfTheWeek !== 0 && dayOfTheWeek !== 6;\n    };\n\n    const getRowClass = dayOfTheWeek => {\n        return isNotWeekend(dayOfTheWeek) ? \"\" : \"highlight\";\n    };\n\n    return (\n        <TableContainer component={Paper} className=\"hoursGrid\">\n            <Table stickyHeader size=\"small\" aria-label=\"simple table\">\n                <HoursTableHead expandColumns={expandColumns} />\n                <TableBody>\n                    {days.map(row => {\n                        const dayOfTheWeek = isTemplate\n                            ? row.day - 1\n                            : new Date(row.date).getDay();\n                        return (\n                            <TableRow\n                                key={row.day}\n                                className={getRowClass(dayOfTheWeek)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.day}\n                                </TableCell>\n                                {columns.map((column, i) => {\n                                    if (!column.enabled && !expandColumns) {\n                                        return null;\n                                    }\n                                    return (\n                                        <HoursCell\n                                            key={`${column.id}-${i}`}\n                                            row={row}\n                                            column={column.id}\n                                            handleChange={handleChange}\n                                            save={save}\n                                            isTemplate={isTemplate}\n                                            days={days}\n                                        />\n                                    );\n                                })}\n                                <TableCell align=\"right\">\n                                    {isNotWeekend(row.dayOfTheWeek) ? (\n                                        <TextField\n                                            id=\"explanation\"\n                                            inputProps={{\n                                                day: row.day,\n                                            }}\n                                            onBlur={event =>\n                                                handleChange(\n                                                    event.target.value,\n                                                    \"explanation\",\n                                                    row.day,\n                                                )\n                                            }\n                                        />\n                                    ) : null}\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n                <HoursFooter expandColumns={expandColumns} days={days} />\n            </Table>\n        </TableContainer>\n    );\n};\n\nexport default HoursGrid;\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport firebase from \"../firebase/firebase\";\nimport Hours from \"../firebase/data/Hours\";\n\nimport HoursHeader from \"./HoursHeader\";\nimport HoursGrid from \"./hoursGrid\";\n\nclass HoursContainer extends Component {\n    state = {\n        id: \"\",\n        days: [],\n        month: \"\",\n        year: \"\",\n        expandColumns: true,\n        client: \"\",\n        project: \"\",\n        profileId: \"\",\n        profile: \"\",\n        snackbarOpen: false,\n        isLoading: false,\n        isTemplate: false,\n    };\n\n    componentDidMount() {\n        const year = new Date().getFullYear();\n        const month = new Date().getMonth() + 1;\n        const { type, profile } = this.props;\n        const isTemplate = type === \"template\";\n\n        this.setState(\n            {\n                isTemplate,\n                profile,\n                profileId: profile.id,\n                year,\n                month,\n            },\n            () => {\n                if (isTemplate) {\n                    this.fetchTemplate(profile.id);\n                } else {\n                    this.fetchMonth();\n                }\n            },\n        );\n    }\n\n    fetchMonth = async () => {\n        this.setState({ isLoading: true });\n        const instance = await Hours.getHoursForProfile(\n            this.state.month,\n            this.state.year,\n            this.state.profileId,\n        );\n\n        if (instance.length === 1) {\n            this.setState({ ...instance[0], id: instance[0].id });\n        } else {\n            this.setState({\n                days: this.getDaysInMonth(this.state.month, this.state.year),\n            });\n        }\n\n        this.setState({ isLoading: false });\n    };\n\n    fetchTemplate = async profileId => {\n        this.setState({ isLoading: true });\n\n        const db = firebase.firestore();\n        const instance = await db\n            .collection(\"template\")\n            .doc(profileId)\n            .get();\n\n        if (instance && instance.exists && instance.data().days) {\n            this.setState({\n                days: instance.data().days,\n                id: instance.id,\n            });\n        } else {\n            this.getTemplateWeek();\n        }\n\n        this.setState({ isLoading: false });\n    };\n\n    applyTemplate = async () => {\n        this.setState({ isLoading: true });\n\n        const db = firebase.firestore();\n        const instance = await db\n            .collection(\"template\")\n            .doc(this.state.profileId)\n            .get();\n\n        const templateDays = await instance.data().days;\n        const { days } = this.state;\n\n        const mergedDays = days.map(day => {\n            const sameDay = templateDays.find(templateDay => {\n                const monthDayOfTheWeek = new Date(day.date).getDay();\n\n                return monthDayOfTheWeek === templateDay.day - 1;\n            });\n\n            if (day !== sameDay) {\n                Object.keys(day).forEach(item => {\n                    if (day[item] === \"\") {\n                        day[item] = sameDay[item];\n                    }\n                });\n            }\n\n            return day;\n        });\n        this.setState({ isLoading: false, days: mergedDays });\n    };\n\n    handleInputChange = (name, value) => {\n        this.setState({ [name]: value }, () => {\n            if ([\"month\", \"year\"].includes(name)) {\n                this.fetchMonth();\n            }\n        });\n    };\n\n    getTemplateWeek = () => {\n        const rows = [];\n\n        for (let i = 1; i <= 7; i++) {\n            rows.push({\n                day: i,\n                date: i - 1,\n                worked: \"\",\n                overtime: \"\",\n                sick: \"\",\n                holiday: \"\",\n                publicHoliday: \"\",\n                available: \"\",\n                education: \"\",\n                other: \"\",\n                standBy: \"\",\n                kilometers: \"\",\n                explanation: \"\",\n            });\n        }\n\n        return this.setState({ days: rows });\n    };\n\n    getDaysInMonth(month, year) {\n        const daysInAMonth = new Date(year, month, 0).getDate();\n\n        const rows = [];\n\n        for (let i = 1; i <= daysInAMonth; i++) {\n            rows.push({\n                day: i,\n                date: new Date(year, month - 1, i),\n                worked: \"\",\n                overtime: \"\",\n                sick: \"\",\n                holiday: \"\",\n                publicHoliday: \"\",\n                available: \"\",\n                education: \"\",\n                other: \"\",\n                standBy: \"\",\n                kilometers: \"\",\n                explanation: \"\",\n            });\n        }\n\n        return rows;\n    }\n\n    submitHours = () => {\n        const db = firebase.firestore();\n        db.collection(\"months\")\n            .doc(\n                this.state.year +\n                    \"-\" +\n                    this.state.month +\n                    \"-\" +\n                    this.state.profile.displayName,\n            )\n            .set({\n                client: this.state.client,\n                days: this.state.days,\n                profile: this.state.profile,\n                profileId: this.state.profileId,\n                project: this.state.project,\n                year: this.state.year,\n                month: this.state.month,\n            })\n            .then(docRef => {\n                this.setState(prevState => {\n                    prevState.snackbarOpen = true;\n                    return prevState;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    submitTemplate = days => {\n        const data = days.map(day => {\n            delete day.date;\n            delete day.dayOfTheWeek;\n            return day;\n        });\n\n        const db = firebase.firestore();\n        db.collection(\"template\")\n            .doc(this.props.profile.id)\n            .set({ days: data })\n            .then(docRef => {\n                this.setState(prevState => {\n                    prevState.snackbarOpen = true;\n                    return prevState;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    save = isTemplate => {\n        if (isTemplate) {\n            this.submitTemplate(this.state.days);\n            return;\n        }\n        this.submitHours();\n    };\n\n    handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        this.setState(prevState => {\n            prevState.snackbarOpen = false;\n            return prevState;\n        });\n    };\n\n    render() {\n        if (!this.props.profile.id) return null;\n\n        return (\n            <form noValidate autoComplete=\"off\">\n                <HoursHeader\n                    setMonth={this.setMonth}\n                    handleInputChange={this.handleInputChange}\n                    client={this.state.client}\n                    project={this.state.project}\n                    expandColumns={this.state.expandColumns}\n                    isTemplate={this.state.isTemplate}\n                    applyTemplate={this.applyTemplate}\n                />\n                <HoursGrid\n                    expandColumns={this.state.expandColumns}\n                    days={this.state.days}\n                    handleChange={this.handleInputChange}\n                    save={this.save}\n                    isTemplate={this.state.isTemplate}\n                />\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"right\",\n                    }}\n                    onClose={this.handleClose}\n                    open={this.state.snackbarOpen}\n                    autoHideDuration={4000}\n                    message=\"Opgeslagen\"\n                />\n            </form>\n        );\n    }\n}\n\nexport default HoursContainer;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"100%\",\n        minHeight: \"100%\",\n        width: \"100%\",\n        position: \"fixed\",\n        background: \"url('./bg-pattern-triangles.png') 0 0 repeat\",\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: \"transparent\",\n    },\n}));\n\nexport default function PreLoad() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <img\n                        src=\"./Icon-green.svg\"\n                        alt=\"CODEZILLA logo\"\n                        height=\"100%\"\n                        width=\"100%\"\n                    ></img>\n                </Avatar>\n                <Typography id=\"preloadTitle\" component=\"h1\" variant=\"h4\">\n                    CODEZILLA Hours\n                </Typography>\n                <Typography\n                    id=\"preloadSubTitle\"\n                    component=\"h2\"\n                    variant=\"subtitle1\"\n                >\n                    Bezig met aanmelden...\n                </Typography>\n            </div>\n        </Container>\n    );\n}\n","export const columns = [\n    {\n        id: \"name\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Naam\",\n    },\n    {\n        id: \"client\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Klant\",\n    },\n    {\n        id: \"project\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Project\",\n    },\n    {\n        id: \"worked\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Gewerkt\",\n    },\n    {\n        id: \"overtime\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Overwerk\",\n    },\n    {\n        id: \"sick\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Ziek\",\n    },\n    {\n        id: \"holiday\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Verlof\",\n    },\n    {\n        id: \"publicHoliday\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Feestdag\",\n    },\n    {\n        id: \"available\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Beschikb.\",\n    },\n    {\n        id: \"education\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Opl.\",\n    },\n    {\n        id: \"other\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Overig\",\n    },\n    {\n        id: \"standBy\",\n        numeric: true,\n        disablePadding: true,\n        label: \"stand-by\",\n    },\n    {\n        id: \"kilometers\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Km\",\n    },\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    Checkbox,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableSortLabel,\n} from \"@material-ui/core/\";\n\nimport * as Constants from \"./constants\";\n\nOverviewHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default function OverviewHeader(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all desserts\" }}\n                    />\n                </TableCell>\n                {Constants.columns.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n","import React from \"react\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n    IconButton,\n    Tooltip,\n    MenuItem,\n    Select,\n    InputLabel,\n    FormControl,\n    Typography,\n    Toolbar,\n} from \"@material-ui/core/\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport * as HoursConstants from \"../../hours/hoursConstants\";\n\nOverviewToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    currentMonth: PropTypes.number.isRequired,\n    currentYear: PropTypes.number.isRequired,\n    onChangeDate: PropTypes.func.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingRight: theme.spacing(1),\n    },\n    formControl: {\n        marginLeft: theme.spacing(2),\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: \"1\",\n    },\n}));\n\nexport default function OverviewToolbar(props) {\n    const classes = useStyles();\n    const { numSelected, currentMonth, currentYear, onChangeDate } = props;\n    const [month, setMonth] = React.useState(currentMonth);\n    const [year, setYear] = React.useState(currentYear);\n\n    const onChangeMonth = value => {\n        setMonth(value);\n        onChangeDate(value, year);\n    };\n\n    const onChangeYear = value => {\n        setYear(value);\n        onChangeDate(month, value);\n    };\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography\n                    className={classes.title}\n                    color=\"inherit\"\n                    variant=\"subtitle1\"\n                >\n                    {numSelected} geselecteerd\n                </Typography>\n            ) : (\n                <Typography\n                    className={classes.title}\n                    variant=\"h6\"\n                    id=\"tableTitle\"\n                >\n                    Beheer\n                </Typography>\n            )}\n\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"select-month-label\">Maand</InputLabel>\n                <Select\n                    labelId=\"select-month-label\"\n                    id=\"select-month-label\"\n                    value={month}\n                    onChange={event => onChangeMonth(event.target.value)}\n                >\n                    {HoursConstants.months.map(month => {\n                        return (\n                            <MenuItem value={month.id} key={month.id}>\n                                {month.description}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"select-year-label\">Jaar</InputLabel>\n                <Select\n                    labelId=\"select-year-label\"\n                    id=\"select-year-label\"\n                    value={year}\n                    onChange={event => onChangeYear(event.target.value)}\n                >\n                    {HoursConstants.years.map(year => {\n                        return (\n                            <MenuItem value={year} key={year}>\n                                {year}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <Tooltip title=\"Filter list\">\n                    <IconButton aria-label=\"filter list\">\n                        <FilterListIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Checkbox,\n    Paper,\n    Table,\n    TableContainer,\n    TableBody,\n    TableRow,\n    TableCell,\n    TableFooter,\n} from \"@material-ui/core/\";\n\nimport Hours from \"../firebase/data/Hours\";\n\nimport * as Constants from \"./overview/constants\";\n\nimport OverviewHeader from \"./overview/overviewHeader\";\nimport OverviewToolbar from \"./overview/overviewToolbar\";\n\nlet rows = [];\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getTotalHoursPerCategory(days, category) {\n    let total = 0;\n    days.forEach(day => {\n        total += Number(day[category]);\n    });\n    return total;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function OverviewTable() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\n    const [selected, setSelected] = React.useState([]);\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const currentYear = new Date().getFullYear();\n    const currentMonth = new Date().getMonth() + 1;\n\n    const handleChangeDate = (month, year) => {\n        getData(month, year);\n    };\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map(row => row.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    const getData = async (month, year) => {\n        setIsLoading(true);\n        const list = await Hours.getHours(month, year);\n        console.log(list);\n        rows = list.map(row => {\n            initRow(row);\n            return row;\n        });\n        setIsLoading(false);\n    };\n\n    const initRow = row => {\n        Constants.columns.forEach(cell => {\n            if (cell.numeric) {\n                row[cell.id] = getTotalHoursPerCategory(row.days, cell.id);\n            }\n        });\n    };\n\n    const getTotal = column => {\n        if (!column.numeric) {\n            return \"\";\n        }\n\n        const values = rows.map(x => x[column.id]);\n        return values.reduce((total, currentValue) => {\n            return Number(total) + Number(currentValue);\n        });\n    };\n\n    React.useEffect(() => {\n        getData(currentMonth, currentYear);\n    }, [currentMonth, currentYear]);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <OverviewToolbar\n                    numSelected={selected.length}\n                    currentMonth={currentMonth}\n                    currentYear={currentYear}\n                    onChangeDate={handleChangeDate}\n                />\n\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size=\"small\"\n                        aria-label=\"enhanced table\"\n                    >\n                        <OverviewHeader\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        {isLoading || rows.length === 0 ? null : (\n                            <>\n                                <TableBody>\n                                    {stableSort(\n                                        rows,\n                                        getComparator(order, orderBy),\n                                    ).map((row, index) => {\n                                        const isItemSelected = isSelected(\n                                            row.id,\n                                        );\n                                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                                        return (\n                                            <TableRow\n                                                hover\n                                                onClick={event =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                role=\"checkbox\"\n                                                aria-checked={isItemSelected}\n                                                tabIndex={-1}\n                                                key={row.id}\n                                                selected={isItemSelected}\n                                            >\n                                                <TableCell padding=\"checkbox\">\n                                                    <Checkbox\n                                                        checked={isItemSelected}\n                                                        inputProps={{\n                                                            \"aria-labelledby\": labelId,\n                                                        }}\n                                                    />\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    id={labelId}\n                                                    scope=\"row\"\n                                                >\n                                                    {row.profile.displayName}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.client}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.project}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.worked}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.overtime}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.sick}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.holiday}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.publicHoliday}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.available}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.education}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.other}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.standBy}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.kilometers}\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                                <TableFooter>\n                                    <TableRow>\n                                        <TableCell padding=\"checkbox\"></TableCell>\n\n                                        {Constants.columns.map(column => {\n                                            return (\n                                                <TableCell\n                                                    align=\"right\"\n                                                    key={\"footer-\" + column.id}\n                                                    padding={\n                                                        column.disablePadding\n                                                            ? \"none\"\n                                                            : \"default\"\n                                                    }\n                                                >\n                                                    {getTotal(column)}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                </TableFooter>\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\n\nimport {\n    makeStyles,\n    ThemeProvider,\n    createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport firebase from \"./firebase/firebase\";\n\nimport Header from \"./navigation/header\";\nimport HoursContainer from \"./hours/HoursContainer\";\nimport PreLoad from \"./navigation/preLoad\";\nimport Admin from \"./admin/admin\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            // light: will be calculated from palette.primary.main,\n            main: \"#67d518\",\n            // dark: will be calculated from palette.primary.main,\n            // contrastText: will be calculated to contrast with palette.primary.main\n        },\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    activeItem: {\n        backgroundColor: theme.palette.primary[100],\n    },\n    item: {},\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    title: {\n        margin: theme.spacing(1, 1),\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    const [profile, setProfile] = React.useState({});\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const goLogin = () => {\n        const provider = new firebase.auth.OAuthProvider(\"microsoft.com\");\n\n        provider.setCustomParameters({\n            tenant: \"45c0a280-6475-473d-a8ee-a5684b93879c\",\n        });\n\n        firebase\n            .auth()\n            .signInWithPopup(provider)\n            .then(function(result) {\n                fetchProfile(result.user);\n            })\n            .catch(function(error) {\n                // Handle error.\n            });\n    };\n\n    React.useEffect(() => {\n        goLogin();\n    }, []);\n\n    const fetchProfile = async user => {\n        const db = firebase.firestore();\n        const snapshot = await db.collection(\"profile\").get();\n        const response = snapshot.docs.find(doc => {\n            return doc.data().microsoftId === user.uid;\n        });\n\n        if (!response) {\n            createNewProfile(user);\n            return;\n        }\n\n        const data = response.data();\n        data.id = response.id;\n        setProfile(data);\n        setIsLoading(false);\n    };\n\n    const createNewProfile = user => {\n        const db = firebase.firestore();\n        const newProfile = {\n            displayName: user.displayName,\n            microsoftId: user.uid,\n            email: user.email,\n        };\n        db.collection(\"profile\")\n            .add(newProfile)\n            .then(docRef => {\n                fetchProfile(user);\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    if (isLoading) return <PreLoad />;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                {isLoading ? (\n                    <PreLoad />\n                ) : (\n                    <Router>\n                        <CssBaseline />\n                        <Header profile={profile} />\n                        <Switch>\n                            <Route\n                                path=\"/\"\n                                exact\n                                component={() => (\n                                    <HoursContainer\n                                        profile={profile}\n                                        type=\"month\"\n                                    />\n                                )}\n                            />\n                            <Route path=\"/template\">\n                                <TemplateHeader classes={classes} />\n                                <HoursContainer\n                                    type=\"template\"\n                                    profile={profile}\n                                />\n                            </Route>\n                            {profile.isAdmin && (\n                                <Route\n                                    path=\"/admin\"\n                                    component={() => (\n                                        <Admin profile={profile} />\n                                    )}\n                                />\n                            )}\n                        </Switch>\n                    </Router>\n                )}\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-app.js\"></script>\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-analytics.js\"></script>\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-auth.js\"></script>\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-firestore.js\"></script>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nconst TemplateHeader = ({ classes }) => (\n    <>\n        <Typography variant=\"body1\" component=\"body\" className={classes.title}>\n            Maak hier een template voor je gemiddelde werkweek. Pas het template\n            toe op de hele urenstaat met een klik op de knop.\n        </Typography>\n\n        <Typography variant=\"body2\" component=\"body\" className={classes.title}>\n            Uren die je al hebt ingevuld worden niet overschreven.\n        </Typography>\n    </>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}