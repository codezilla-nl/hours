{"version":3,"sources":["firebase/firebase.js","navigation/header.js","hours/hoursConstants.js","hours/HoursHeader.js","hours/HoursFooter.js","hours/HoursCell.js","hours/HoursTableHeader.js","hours/hoursGrid.js","hours/HoursContainer.js","navigation/preLoad.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","Header","profile","classes","className","root","AppBar","position","Toolbar","Typography","variant","Button","component","NavLink","color","to","startIcon","displayName","columns","id","description","enabled","months","years","currentYear","Date","getFullYear","currentMonth","getMonth","HoursHeader","isTemplate","client","project","expandColumns","handleInputChange","Grid","container","direction","alignItems","FormControl","InputLabel","Select","labelId","defaultValue","onChange","event","target","value","map","month","MenuItem","key","year","TextField","label","FormControlLabel","control","Switch","checked","HoursConstants","HoursFooter","days","length","TableFooter","TableRow","TableCell","column","align","x","reduce","total","currentValue","Number","getTotal","HoursCell","row","handleChange","save","day","inputProps","style","textAlign","daysInput","numberValue","isNaN","handleHoursInput","onBlur","size","HoursTableHead","TableHead","HoursGrid","isNotWeekend","dayNumber","dayOfTheWeek","getDay","TableContainer","Paper","Table","stickyHeader","aria-label","TableBody","rowNumber","scope","i","HoursContainer","state","profileId","snackbarOpen","isLoading","fetchMonth","a","setState","db","firestore","collection","where","get","response","instance","docs","find","doc","data","exists","getDaysInMonth","fetchTemplate","name","includes","submitHours","set","then","docRef","prevState","catch","error","console","submitTemplate","date","props","handleClose","reason","this","type","daysInAMonth","getDate","rows","push","worked","overtime","sick","holiday","publicHoliday","available","education","other","standBy","kilometers","explanation","noValidate","autoComplete","setMonth","Snackbar","anchorOrigin","vertical","horizontal","onClose","open","autoHideDuration","message","Component","height","minHeight","width","background","paper","marginTop","display","flexDirection","avatar","margin","backgroundColor","PreLoad","Container","maxWidth","CssBaseline","Avatar","src","alt","activeItem","palette","primary","item","hide","toolbar","justifyContent","padding","mixins","content","Boolean","window","location","hostname","match","ReactDOM","render","React","useState","setProfile","setIsLoading","useEffect","provider","auth","OAuthProvider","setCustomParameters","tenant","signInWithPopup","result","fetchProfile","user","goLogin","snapshot","microsoftId","uid","createNewProfile","newProfile","email","add","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.60b1dcaf.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAkvaF-lqt8ZxyBwcNlwrHhj-Pp3Ev54pI\",\n    authDomain: \"codezilla-hours.firebaseapp.com\",\n    databaseURL: \"https://codezilla-hours.firebaseio.com\",\n    projectId: \"codezilla-hours\",\n    storageBucket: \"codezilla-hours.appspot.com\",\n    messagingSenderId: \"634823174203\",\n    appId: \"1:634823174203:web:ca40af276111cfae66541e\",\n    measurementId: \"G-DR0KK33WCW\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header({ profile }) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        CODEZILLA Hours\n                    </Typography>\n                    <Button component={NavLink} color=\"inherit\" to=\"/\">\n                        Urenstaat\n                    </Button>\n                    {/* <Button component={NavLink} color=\"inherit\" to=\"/template\">\n                        Template\n                    </Button> */}\n                    <Button color=\"inherit\" startIcon={<AccountCircle />}>\n                        {profile.displayName}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","export const columns = [\n    {\n        id: \"worked\",\n        description: \"Gewerkt\",\n        enabled: true\n    },\n    {\n        id: \"overtime\",\n        description: \"Overwerk\",\n        enabled: true\n    },\n    {\n        id: \"sick\",\n        description: \"Ziek\",\n        enabled: true\n    },\n    {\n        id: \"holiday\",\n        description: \"Verlof\",\n        enabled: true\n    },\n    {\n        id: \"publicHoliday\",\n        description: \"Feestdag\",\n        enabled: true\n    },\n    {\n        id: \"available\",\n        description: \"Beschikbaar\",\n        enabled: false\n    },\n    {\n        id: \"education\",\n        description: \"Opleiding\",\n        enabled: false\n    },\n    {\n        id: \"other\",\n        description: \"Overig\",\n        enabled: false\n    },\n    {\n        id: \"standBy\",\n        description: \"StandBy\",\n        enabled: false\n    },\n    {\n        id: \"kilometers\",\n        description: \"Kilometers\",\n        enabled: false\n    }\n];\n\nexport const months = [\n    {\n        id: 1,\n        description: \"Januari\"\n    },\n    {\n        id: 2,\n        description: \"Februari\"\n    },\n    {\n        id: 3,\n        description: \"Maart\"\n    },\n    {\n        id: 4,\n        description: \"April\"\n    },\n    {\n        id: 5,\n        description: \"Mei\"\n    },\n    {\n        id: 6,\n        description: \"Juni\"\n    },\n    {\n        id: 7,\n        description: \"Juli\"\n    },\n    {\n        id: 8,\n        description: \"Augustus\"\n    },\n    {\n        id: 9,\n        description: \"September\"\n    },\n    {\n        id: 10,\n        description: \"Oktober\"\n    },\n    {\n        id: 11,\n        description: \"November\"\n    },\n    {\n        id: 12,\n        description: \"December\"\n    }\n];\n\nexport const years = [2020, 2021, 2022, 2023, 2025];\n","import React from \"react\";\nimport {\n    Toolbar,\n    Grid,\n    FormControl,\n    FormControlLabel,\n    InputLabel,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n} from \"@material-ui/core\";\n\nimport * as HoursConstants from \"./hoursConstants\";\n\nconst months = HoursConstants.months;\nconst years = HoursConstants.years;\nconst currentYear = new Date().getFullYear();\nconst currentMonth = new Date().getMonth() + 1;\n\nconst HoursHeader = ({\n    isTemplate,\n    client,\n    project,\n    expandColumns,\n    handleInputChange,\n}) => {\n    if (isTemplate) return null;\n    return (\n        <Toolbar>\n            <Grid container direction=\"row\" alignItems=\"flex-start\">\n                <FormControl>\n                    <InputLabel id=\"select-month-label\">Maand</InputLabel>\n                    <Select\n                        labelId=\"select-month-label\"\n                        id=\"select-month-label\"\n                        defaultValue={currentMonth}\n                        onChange={event =>\n                            handleInputChange(\"month\", event.target.value)\n                        }\n                    >\n                        {months.map(month => {\n                            return (\n                                <MenuItem value={month.id} key={month.id}>\n                                    {month.description}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <FormControl>\n                    <InputLabel id=\"select-year-label\">Jaar</InputLabel>\n                    <Select\n                        labelId=\"select-year-label\"\n                        id=\"select-year-label\"\n                        defaultValue={currentYear}\n                        onChange={event =>\n                            handleInputChange(\"year\", event.target.value)\n                        }\n                    >\n                        {years.map(year => {\n                            return (\n                                <MenuItem value={year} key={year}>\n                                    {year}\n                                </MenuItem>\n                            );\n                        })}\n                    </Select>\n                </FormControl>\n                <TextField\n                    id=\"client\"\n                    label=\"Klant\"\n                    value={client}\n                    onChange={event =>\n                        handleInputChange(\"client\", event.target.value)\n                    }\n                />\n                <TextField\n                    id=\"project\"\n                    label=\"Project\"\n                    value={project}\n                    onChange={event =>\n                        handleInputChange(\"project\", event.target.value)\n                    }\n                />\n\n                <FormControlLabel\n                    control={\n                        <Switch\n                            checked={expandColumns}\n                            onChange={event =>\n                                handleInputChange(\n                                    \"expandColumns\",\n                                    event.target.checked,\n                                )\n                            }\n                            color=\"primary\"\n                        />\n                    }\n                    label=\"Toon alle velden\"\n                />\n            </Grid>\n        </Toolbar>\n    );\n};\n\nexport default HoursHeader;\n","import React from \"react\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport * as HoursConstants from \"./hoursConstants\";\n\nconst columns = HoursConstants.columns;\n\nconst HoursFooter = ({ expandColumns, days }) => {\n    const getTotal = column => {\n        const values = days.map(x => x[column]);\n        return values.reduce((total, currentValue) => {\n            return Number(total) + Number(currentValue);\n        });\n    };\n\n    if (!days.length) return null;\n\n    return (\n        <TableFooter>\n            <TableRow>\n                <TableCell> Totaal</TableCell>\n                {columns.map(column => {\n                    if (!column.enabled && !expandColumns) {\n                        return null;\n                    }\n                    return (\n                        <TableCell align=\"right\" key={\"footer-\" + column.id}>\n                            {getTotal(column.id)}\n                        </TableCell>\n                    );\n                })}\n                <TableCell align=\"right\"></TableCell>\n            </TableRow>\n        </TableFooter>\n    );\n};\n\nexport default HoursFooter;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst HoursCell = ({ row, column, days, handleChange, isTemplate, save }) => {\n    const handleHoursInput = (value, column, day) => {\n        const daysInput = [...days];\n        const numberValue = Number(value);\n        daysInput[day][column] = isNaN(numberValue) ? \"\" : numberValue;\n        handleChange(\"days\", daysInput);\n    };\n\n    if (!row) return null;\n\n    return (\n        <TableCell align=\"right\" key={row.day + \"-\" + column}>\n            <TextField\n                id={column}\n                inputProps={{\n                    style: {\n                        textAlign: \"right\",\n                    },\n                    day: row.day,\n                }}\n                value={row[column]}\n                onChange={event =>\n                    handleHoursInput(event.target.value, column, row.day - 1)\n                }\n                onBlur={() => save(isTemplate)}\n                size=\"small\"\n            />\n        </TableCell>\n    );\n};\n\nexport default HoursCell;\n","import React from \"react\";\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core\";\nimport { columns } from \"./hoursConstants\";\n\nconst HoursTableHead = ({ expandColumns }) => {\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell></TableCell>\n                {columns.map(column => {\n                    if (!column.enabled && !expandColumns) {\n                        return null;\n                    }\n                    return (\n                        <TableCell align=\"right\" key={\"header-\" + column.id}>\n                            {column.description}\n                        </TableCell>\n                    );\n                })}\n                <TableCell align=\"right\">Toelichting</TableCell>\n            </TableRow>\n        </TableHead>\n    );\n};\n\nexport default HoursTableHead;\n","import React from \"react\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    TextField,\n    Paper,\n} from \"@material-ui/core\";\n\nimport * as HoursConstants from \"./hoursConstants\";\nimport HoursFooter from \"./HoursFooter\";\nimport HoursCell from \"./HoursCell\";\nimport HoursTableHead from \"./HoursTableHeader\";\n\nconst columns = HoursConstants.columns;\n\nconst HoursGrid = ({\n    expandColumns,\n    days,\n    handleChange,\n    save,\n    month,\n    year,\n    isTemplate,\n}) => {\n    const isNotWeekend = dayNumber => {\n        const dayOfTheWeek = new Date(year, month - 1, dayNumber + 1).getDay();\n        return dayOfTheWeek !== 0 && dayOfTheWeek !== 6;\n    };\n\n    const getRowClass = dayNumber => {\n        return isNotWeekend(dayNumber) ? \"\" : \"highlight\";\n    };\n\n    return (\n        <TableContainer component={Paper} className=\"hoursGrid\">\n            <Table stickyHeader size=\"small\" aria-label=\"simple table\">\n                <HoursTableHead expandColumns={expandColumns} />\n                <TableBody>\n                    {days.map((row, rowNumber) => {\n                        return (\n                            <TableRow\n                                key={row.day}\n                                className={getRowClass(rowNumber)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.day}\n                                </TableCell>\n                                {columns.map((column, i) => {\n                                    if (!column.enabled && !expandColumns) {\n                                        return null;\n                                    }\n                                    return (\n                                        <HoursCell\n                                            key={`${column.id}-${i}`}\n                                            row={row}\n                                            column={column.id}\n                                            handleChange={handleChange}\n                                            save={save}\n                                            isTemplate={isTemplate}\n                                            days={days}\n                                        />\n                                    );\n                                })}\n                                <TableCell align=\"right\">\n                                    {isNotWeekend(row.dayOfTheWeek) ? (\n                                        <TextField\n                                            id=\"explanation\"\n                                            inputProps={{\n                                                day: row.day,\n                                            }}\n                                            onBlur={event =>\n                                                handleChange(\n                                                    event.target.value,\n                                                    \"explanation\",\n                                                    row.day,\n                                                )\n                                            }\n                                        />\n                                    ) : null}\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n                <HoursFooter expandColumns={expandColumns} days={days} />\n            </Table>\n        </TableContainer>\n    );\n};\n\nexport default HoursGrid;\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport firebase from \"../firebase/firebase\";\n\nimport HoursHeader from \"./HoursHeader\";\nimport HoursGrid from \"./hoursGrid\";\n\nclass HoursContainer extends Component {\n    state = {\n        id: \"\",\n        days: [],\n        month: \"\",\n        year: \"\",\n        expandColumns: true,\n        client: \"\",\n        project: \"\",\n        profileId: \"\",\n        profile: \"\",\n        snackbarOpen: false,\n        isLoading: false,\n        isTemplate: false,\n    };\n\n    componentDidMount() {\n        const year = new Date().getFullYear();\n        const month = new Date().getMonth() + 1;\n        const { type, profile } = this.props;\n        const isTemplate = type === \"template\";\n\n        this.setState(\n            {\n                isTemplate,\n                profile,\n                profileId: profile.id,\n                year,\n                month,\n            },\n            () => {\n                if (isTemplate) {\n                    this.fetchTemplate(profile.id);\n                } else {\n                    this.fetchMonth();\n                }\n            },\n        );\n    }\n\n    fetchMonth = async () => {\n        this.setState({ isLoading: true });\n        const db = firebase.firestore();\n        const response = await db\n            .collection(\"months\")\n            .where(\"month\", \"==\", this.state.month)\n            .where(\"year\", \"==\", this.state.year)\n            .where(\"profileId\", \"==\", this.state.profileId)\n            .get();\n        const instance = response.docs.find(doc => doc.data());\n\n        if (instance && instance.exists) {\n            this.setState({ ...instance.data(), id: instance.id });\n        } else {\n            this.setState({\n                days: this.getDaysInMonth(this.state.month, this.state.year),\n            });\n        }\n\n        this.setState({ isLoading: false });\n    };\n\n    fetchTemplate = async profileId => {\n        this.setState({ isLoading: true });\n\n        const db = firebase.firestore();\n        const instance = await db\n            .collection(\"template\")\n            .doc(profileId)\n            .get();\n\n        if (instance && instance.exists) {\n            this.setState({\n                days: instance.data().days,\n                id: instance.id,\n            });\n        }\n\n        this.setState({ isLoading: false });\n    };\n\n    handleInputChange = (name, value) => {\n        this.setState({ [name]: value }, () => {\n            if ([\"month\", \"year\"].includes(name)) {\n                this.fetchMonth();\n            }\n        });\n    };\n\n    getDaysInMonth(month, year) {\n        const daysInAMonth = new Date(year, month, 0).getDate();\n        const rows = [];\n\n        for (let i = 1; i < daysInAMonth; i++) {\n            rows.push({\n                day: i,\n                date: new Date(year, month - 1, i),\n                worked: \"\",\n                overtime: \"\",\n                sick: \"\",\n                holiday: \"\",\n                publicHoliday: \"\",\n                available: \"\",\n                education: \"\",\n                other: \"\",\n                standBy: \"\",\n                kilometers: \"\",\n                explanation: \"\",\n            });\n        }\n\n        return rows;\n    }\n\n    submitHours = () => {\n        const db = firebase.firestore();\n        db.collection(\"months\")\n            .doc(\n                this.state.year +\n                    \"-\" +\n                    this.state.month +\n                    \"-\" +\n                    this.state.profile.displayName,\n            )\n            .set({\n                client: this.state.client,\n                days: this.state.days,\n                profile: this.state.profile,\n                profileId: this.state.profileId,\n                project: this.state.project,\n                year: this.state.year,\n                month: this.state.month,\n            })\n            .then(docRef => {\n                this.setState(prevState => {\n                    prevState.snackbarOpen = true;\n                    return prevState;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    submitTemplate = days => {\n        const data = days.map(day => {\n            delete day.date;\n            delete day.dayOfTheWeek;\n            return day;\n        });\n\n        const db = firebase.firestore();\n        db.collection(\"template\")\n            .doc(this.props.profile.id)\n            .set({ days: data })\n            .then(docRef => {\n                this.setState(prevState => {\n                    prevState.snackbarOpen = true;\n                    return prevState;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    save = isTemplate => {\n        if (isTemplate) {\n            this.submitTemplate(this.state.days);\n            return;\n        }\n        this.submitHours();\n    };\n\n    handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        this.setState(prevState => {\n            prevState.snackbarOpen = false;\n            return prevState;\n        });\n    };\n\n    render() {\n        if (!this.props.profile.id) return null;\n\n        return (\n            <form noValidate autoComplete=\"off\">\n                <HoursHeader\n                    setMonth={this.setMonth}\n                    handleInputChange={this.handleInputChange}\n                    client={this.state.client}\n                    project={this.state.project}\n                    expandColumns={this.state.expandColumns}\n                    isTemplate={this.state.isTemplate}\n                />\n                <HoursGrid\n                    expandColumns={this.state.expandColumns}\n                    days={this.state.days}\n                    handleChange={this.handleInputChange}\n                    save={this.save}\n                    month={this.state.month}\n                    year={this.state.year}\n                    isTemplate={this.state.isTemplate}\n                />\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"left\",\n                    }}\n                    onClose={this.handleClose}\n                    open={this.state.snackbarOpen}\n                    autoHideDuration={6000}\n                    message=\"Opgeslagen\"\n                />\n            </form>\n        );\n    }\n}\n\nexport default HoursContainer;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"100%\",\n        minHeight: \"100%\",\n        width: \"100%\",\n        position: \"fixed\",\n        background: \"url('./bg-pattern-triangles.png') 0 0 repeat\",\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: \"transparent\",\n    },\n}));\n\nexport default function PreLoad() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <img\n                        src=\"./Icon-green.svg\"\n                        alt=\"CODEZILLA logo\"\n                        height=\"100%\"\n                        width=\"100%\"\n                    ></img>\n                </Avatar>\n                <Typography id=\"preloadTitle\" component=\"h1\" variant=\"h4\">\n                    CODEZILLA Hours\n                </Typography>\n                <Typography\n                    id=\"preloadSubTitle\"\n                    component=\"h2\"\n                    variant=\"subtitle1\"\n                >\n                    Bezig met aanmelden...\n                </Typography>\n            </div>\n        </Container>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport firebase from \"./firebase/firebase\";\n\nimport Header from \"./navigation/header\";\nimport HoursContainer from \"./hours/HoursContainer\";\nimport PreLoad from \"./navigation/preLoad\";\n\nconst useStyles = makeStyles(theme => ({\n    activeItem: {\n        backgroundColor: theme.palette.primary[100],\n    },\n    item: {},\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    title: {\n        margin: theme.spacing(0, 1),\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    const [profile, setProfile] = React.useState({});\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const goLogin = () => {\n        const provider = new firebase.auth.OAuthProvider(\"microsoft.com\");\n\n        provider.setCustomParameters({\n            tenant: \"45c0a280-6475-473d-a8ee-a5684b93879c\",\n        });\n\n        firebase\n            .auth()\n            .signInWithPopup(provider)\n            .then(function(result) {\n                fetchProfile(result.user);\n            })\n            .catch(function(error) {\n                // Handle error.\n            });\n    };\n\n    React.useEffect(() => {\n        goLogin();\n    }, []);\n\n    const fetchProfile = async user => {\n        const db = firebase.firestore();\n        const snapshot = await db.collection(\"profile\").get();\n        const response = snapshot.docs.find(doc => {\n            return doc.data().microsoftId === user.uid;\n        });\n\n        if (!response) {\n            createNewProfile(user);\n            return;\n        }\n\n        const data = response.data();\n        data.id = response.id;\n        setProfile(data);\n        setIsLoading(false);\n    };\n\n    const createNewProfile = user => {\n        const db = firebase.firestore();\n        const newProfile = {\n            displayName: user.displayName,\n            microsoftId: user.uid,\n            email: user.email,\n        };\n        db.collection(\"profile\")\n            .add(newProfile)\n            .then(docRef => {\n                newProfile.id = docRef.id;\n                setProfile(newProfile);\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n\n        setIsLoading(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            {!isLoading ? (\n                <Router>\n                    <CssBaseline />\n                    <Header profile={profile} />\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <HoursContainer type=\"month\" profile={profile} />\n                        </Route>\n                        <Route path=\"/template\">\n                            <Typography\n                                variant=\"h4\"\n                                component=\"h4\"\n                                className={classes.title}\n                            >\n                                Template\n                            </Typography>\n                            <HoursContainer type=\"template\" profile={profile} />\n                        </Route>\n                    </Switch>\n                </Router>\n            ) : (\n                <PreLoad />\n            )}\n\n            <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-app.js\"></script>\n\n            <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-analytics.js\"></script>\n\n            <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-auth.js\"></script>\n            <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-firestore.js\"></script>\n        </div>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}