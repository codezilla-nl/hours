{"version":3,"sources":["firebase/firebase.component.tsx","navigation/header.component.tsx","firebase/data/Hours.tsx","export/pdf/JSReport.tsx","hours/hours-constants/hoursConstants.component.tsx","export/csv/ExportToCSV.tsx","hours/validation/ValidationNotification.component.tsx","hours/hours-header/HoursHeader.component.tsx","hours/hours-footer/HoursFooter.component.tsx","hours/hours-cell/HoursCell.component.tsx","hours/hours-table-header/HoursTableHeader.component.tsx","hours/hours-comment/HoursComment.component.tsx","hours/hours-grid/HoursGrid.component.tsx","hours/validation/Validators.tsx","common/Utils.tsx","hours/hours-container/HoursContainer.component.tsx","navigation/pre-load/preLoad.component.tsx","admin/overview/Constants.tsx","admin/overview/OverviewHeader.component.tsx","admin/overview/OverviewToolbar.component.tsx","admin/Admin.component.tsx","admin/detail/Detail.component.tsx","App.tsx","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","appBar","backgroundColor","color","menuButton","marginRight","spacing","highlight","darken","title","flexGrow","avatar","Header","profile","classes","AppBar","position","className","Toolbar","Avatar","src","alt","height","width","Typography","variant","Button","component","NavLink","to","exact","activeClassName","isAdmin","startIcon","displayName","getHours","month","year","db","firestore","collection","where","Number","get","getHoursForProfile","profileId","response","docs","map","doc","row","data","id","getHoursWithId","updateHours","document","set","client","transformToString","days","processDays","project","approved","updateHourList","documents","batch","forEach","reference","update","commit","getTemplate","updateTemplate","profileName","x","index","day","dayOfTheWeek","isWeekend","worked","overtime","sick","holiday","publicHoliday","available","education","other","standBy","kilometers","explanation","value","type","postData","template","shortid","options","reports","save","fetch","method","credentials","headers","Authorization","body","JSON","stringify","then","blob","url","window","URL","createObjectURL","a","createElement","href","download","appendChild","click","remove","request","columns","description","enabled","months","years","publicHolidays","csvColumns","column","unshift","push","header","join","csvData","toString","csvContent","encodedUri","encodeURI","link","setAttribute","ValidationNotification","messages","React","useState","anchorEl","setAnchorEl","open","Boolean","undefined","IconButton","aria-label","onClick","event","currentTarget","Badge","badgeContent","length","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List","message","ListItem","key","ListItemText","primary","alert","spacingLeft","marginLeft","spacingRight","right","display","justifyContent","alignItems","HoursConstants","currentYear","Date","getFullYear","currentMonth","getMonth","HoursHeader","isTemplate","expandColumns","handleInputChange","applyTemplate","getReport","getCSV","validationMessages","saved","handleClose","disableGutters","FormControl","InputLabel","Select","labelId","defaultValue","onChange","target","MenuItem","aria-controls","aria-haspopup","Menu","keepMounted","disabled","ClientAndProject","TextField","label","HoursFooter","TableFooter","TableRow","TableCell","align","reduce","total","currentValue","getTotal","textField","HoursCell","handleChange","readOnly","setValue","useEffect","padding","fullWidth","inputProps","style","textAlign","onBlur","daysInput","handleHoursInput","onKeyDown","closest","parentNode","Array","from","children","indexOf","keyCode","nextRow","nextSibling","querySelector","focus","prevRow","previousSibling","previousElementSibling","tagName","nextElementSibling","HoursTableHead","TableHead","HoursComment","input","cancel","show","comment","setComment","onCancel","Dialog","aria-labelledby","maxWidth","DialogTitle","DialogContent","autoFocus","margin","DialogActions","tableContainer","overflowX","HoursGrid","getRowClass","isPublicHoliday","output","setExplanation","showComment","setShowComment","rowIndex","setRowIndex","getDayName","date","getDay","TableContainer","Paper","Table","stickyHeader","size","TableBody","scope","Tooltip","i","openComment","text","validateWeekend","hours","this","getTotalHoursPerDay","format","validateTotalHoursOfMonth","userTotalHours","potentialTotalHours","b","getDayOfTheWeek","item","getTime","includes","parseDate","toDate","initDays","HoursContainer","state","microsoftId","email","showValidationMessage","isLoading","fetchMonth","setState","Hours","instance","initData","getDaysInMonth","fetchTemplate","exists","getTemplateWeek","catch","error","props","notification","Utils","isValid","templateDays","mergedDays","sameDay","find","templateDay","Object","keys","name","rows","submitHours","submitTemplate","weekendValidation","Validators","totalHoursValidation","closeValidationMessage","reason","JSReport","ExportToCSV","removeEventListener","daysInAMonth","getDate","noValidate","autoComplete","LinearProgress","Component","paper","marginTop","flexDirection","PreLoad","Container","CssBaseline","numeric","disablePadding","OverviewHeader","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","Checkbox","indeterminate","checked","Constants","headCell","sortDirection","small","TableSortLabel","active","direction","property","visuallyHidden","root","paddingRight","formControl","palette","secondary","main","lighten","light","dark","flex","OverviewToolbar","onChangeDate","approve","setMonth","setYear","clsx","descendingComparator","marginBottom","table","minWidth","fontSize","border","clip","overflow","top","OverviewTable","setOrder","setOrderBy","selected","setSelected","setIsLoading","setRows","getData","list","initRow","saveData","cell","category","getTotalHoursPerCategory","newRows","assign","newSelecteds","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","isItemSelected","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","Link","fontWeight","AdminDetail","useParams","setData","documentId","saveMonth","onApprove","require","config","createMuiTheme","hide","toolbar","mixins","content","App","setProfile","notificationMessage","setNotificationMessage","getAuth","auth","getRedirectResult","result","user","fetchProfile","provider","OAuthProvider","setCustomParameters","tenant","signInWithRedirect","signIn","snapshot","uid","createNewProfile","newProfile","add","docRef","ThemeProvider","path","Snackbar","autoHideDuration","TemplateHeader","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.90912754.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAkvaF-lqt8ZxyBwcNlwrHhj-Pp3Ev54pI\",\n    authDomain: \"codezilla-hours.firebaseapp.com\",\n    databaseURL: \"https://codezilla-hours.firebaseio.com\",\n    projectId: \"codezilla-hours\",\n    storageBucket: \"codezilla-hours.appspot.com\",\n    messagingSenderId: \"634823174203\",\n    appId: \"1:634823174203:web:ca40af276111cfae66541e\",\n    measurementId: \"G-DR0KK33WCW\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport { makeStyles, darken } from \"@material-ui/core/styles\";\nimport { Avatar, AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\nimport IProfile from \"../common/interfaces/IProfile\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        backgroundColor: \"#7d518\",\n        color: \"#fff\",\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    highlight: {\n        backgroundColor: darken(\"rgba(103, 213, 24)\", 0.1),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    avatar: {\n        marginRight: theme.spacing(2),\n        backgroundColor: \"transparent\",\n    },\n}));\n\ninterface IProps {\n    profile: IProfile;\n}\n\nexport default function Header({ profile }: IProps) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    <Avatar className={classes.avatar}>\n                        <img\n                            src=\"./Icon-white.svg\"\n                            alt=\"CODEZILLA logo\"\n                            height=\"100%\"\n                            width=\"100%\"\n                        ></img>\n                    </Avatar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        CODEZILLA Hours\n                    </Typography>\n                    <Button\n                        component={NavLink}\n                        color=\"inherit\"\n                        to=\"/\"\n                        exact\n                        activeClassName={classes.highlight}\n                    >\n                        Urenstaat\n                    </Button>\n                    <Button\n                        component={NavLink}\n                        color=\"inherit\"\n                        to=\"/template\"\n                        activeClassName={classes.highlight}\n                    >\n                        Template\n                    </Button>\n                    {profile.isAdmin && (\n                        <Button\n                            component={NavLink}\n                            color=\"inherit\"\n                            to=\"/admin\"\n                            activeClassName={classes.highlight}\n                        >\n                            Beheer\n                        </Button>\n                    )}\n                    <Button color=\"inherit\" startIcon={<AccountCircle />}>\n                        {profile.displayName}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import firebase from \"../firebase.component\";\n\nimport IDay from \"../../common/interfaces/IDay\";\nimport IHours from \"../../common/interfaces/IHours\";\n\nexport default {\n    async getHours(\n        month: number,\n        year: number,\n    ): Promise<\n        firebase.firestore.QuerySnapshot<firebase.firestore.DocumentData>\n    > {\n        const db = firebase.firestore();\n        debugger;\n        return await db\n            .collection(\"months\")\n            .where(\"month\", \"==\", Number(month))\n            .where(\"year\", \"==\", Number(year))\n            .get();\n    },\n\n    async getHoursForProfile(month: number, year: number, profileId: string) {\n        const db = firebase.firestore();\n        const response = await db\n            .collection(\"months\")\n            .where(\"month\", \"==\", Number(month))\n            .where(\"year\", \"==\", Number(year))\n            .where(\"profileId\", \"==\", profileId)\n            .get();\n        return response.docs.map((doc) => {\n            const row = doc.data();\n            row.id = doc.id;\n            return row;\n        });\n    },\n    async getHoursWithId(\n        id: string,\n    ): Promise<\n        firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>\n    > {\n        const db = firebase.firestore();\n        return await db.collection(\"months\").doc(id).get();\n    },\n\n    async updateHours(id: string, document: IHours): Promise<void> {\n        const db = firebase.firestore();\n        return await db\n            .collection(\"months\")\n            .doc(id)\n            .set({\n                client: this.transformToString(document.client),\n                days: this.processDays(document.days),\n                profile: document.profile,\n                profileId: this.transformToString(document.profileId),\n                project: this.transformToString(document.project),\n                year: this.transformToString(document.year),\n                month: this.transformToString(document.month),\n                approved: document.approved ? document.approved : false,\n            });\n    },\n\n    async updateHourList(documents: IHours[]): Promise<void> {\n        const db = firebase.firestore();\n        const batch = db.batch();\n\n        documents.forEach((document: IHours) => {\n            if (!document.id || document.id === \"\") {\n                return;\n            }\n            const reference = db.collection(\"months\").doc(document.id);\n            batch.update(reference, document);\n        });\n\n        return batch.commit();\n    },\n\n    async getTemplate(\n        profileId: string,\n    ): Promise<\n        firebase.firestore.DocumentSnapshot<firebase.firestore.DocumentData>\n    > {\n        const db = firebase.firestore();\n        return await db.collection(\"template\").doc(profileId).get();\n    },\n\n    async updateTemplate(\n        profileId: string,\n        days: IDay[],\n        client: string,\n        project: string,\n        profileName: string,\n    ): Promise<void> {\n        const db = firebase.firestore();\n        return await db.collection(\"template\").doc(profileId).set({\n            days,\n            client,\n            project,\n            profileName,\n        });\n    },\n\n    processDays(days: IDay[]) {\n        return days.map((x, index) => {\n            return {\n                day: x.day ? x.day : index + 1,\n                dayOfTheWeek: x.dayOfTheWeek ? x.dayOfTheWeek : index + 1,\n                isWeekend: x.isWeekend ? x.isWeekend : false,\n                worked: this.transformToString(x.worked),\n                overtime: this.transformToString(x.overtime),\n                sick: this.transformToString(x.sick),\n                holiday: this.transformToString(x.holiday),\n                publicHoliday: this.transformToString(x.publicHoliday),\n                available: this.transformToString(x.available),\n                education: this.transformToString(x.education),\n                other: this.transformToString(x.other),\n                standBy: this.transformToString(x.standBy),\n                kilometers: this.transformToString(x.kilometers),\n                explanation: this.transformToString(x.explanation),\n            };\n        });\n    },\n\n    transformToString(value: any): string {\n        return value ? value : \"\";\n    },\n};\n","import IHours from \"../../common/interfaces/IHours\";\n\nexport default {\n    async getReport(data: IHours, type: string): Promise<any> {\n        let id = \"\";\n\n        switch (type) {\n            case \"intern\":\n                id = \"HJewFyx0vL\";\n                break;\n            case \"extern\":\n                id = \"H1gnFUldtI\";\n                break;\n            default:\n                id = \"\";\n                break;\n        }\n\n        if (id === \"\") {\n            return;\n        }\n\n        const postData = {\n            template: { shortid: id },\n            data: data,\n            options: { reports: { save: true } },\n        };\n\n        const request = await fetch(\n            \"https://codezilla.jsreportonline.net/api/report\",\n            {\n                method: \"POST\",\n                credentials: \"same-origin\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    Authorization:\n                        \"Basic c2FuZGVyQGNvZGV6aWxsYS5ubDphVFNSYzNATWp3UjZQU0A=\",\n                },\n                body: JSON.stringify(postData),\n            },\n        )\n            .then((response) => response.blob())\n            .then((blob) => {\n                var url = window.URL.createObjectURL(blob);\n                var a = document.createElement(\"a\");\n                a.href = url;\n                a.download = data.id + \".pdf\";\n                document.body.appendChild(a);\n                a.click();\n                a.remove();\n            });\n        return request;\n    },\n};\n","import IHoursColumn from \"./IHoursColumn\";\nimport IMonth from \"./IMonth\";\n\nexport const columns: IHoursColumn[] = [\n    {\n        id: \"worked\",\n        description: \"Gewerkt\",\n        enabled: true,\n    },\n    {\n        id: \"overtime\",\n        description: \"Overwerk\",\n        enabled: true,\n    },\n    {\n        id: \"sick\",\n        description: \"Ziek\",\n        enabled: true,\n    },\n    {\n        id: \"holiday\",\n        description: \"Verlof\",\n        enabled: true,\n    },\n    {\n        id: \"publicHoliday\",\n        description: \"Feestdag\",\n        enabled: true,\n    },\n    {\n        id: \"available\",\n        description: \"Beschikbaar\",\n        enabled: false,\n    },\n    {\n        id: \"education\",\n        description: \"Opleiding\",\n        enabled: false,\n    },\n    {\n        id: \"other\",\n        description: \"Overig\",\n        enabled: false,\n    },\n    {\n        id: \"standBy\",\n        description: \"StandBy\",\n        enabled: false,\n    },\n    {\n        id: \"kilometers\",\n        description: \"Kilometers\",\n        enabled: false,\n    },\n];\n\nexport const months: IMonth[] = [\n    {\n        id: 1,\n        description: \"Januari\",\n    },\n    {\n        id: 2,\n        description: \"Februari\",\n    },\n    {\n        id: 3,\n        description: \"Maart\",\n    },\n    {\n        id: 4,\n        description: \"April\",\n    },\n    {\n        id: 5,\n        description: \"Mei\",\n    },\n    {\n        id: 6,\n        description: \"Juni\",\n    },\n    {\n        id: 7,\n        description: \"Juli\",\n    },\n    {\n        id: 8,\n        description: \"Augustus\",\n    },\n    {\n        id: 9,\n        description: \"September\",\n    },\n    {\n        id: 10,\n        description: \"Oktober\",\n    },\n    {\n        id: 11,\n        description: \"November\",\n    },\n    {\n        id: 12,\n        description: \"December\",\n    },\n];\n\nexport const years: number[] = [2020, 2021, 2022, 2023, 2024, 2025];\n\nexport const publicHolidays: string[] = [\n    \"2020, 1, 1\",\n    \"2020, 4, 13\",\n    \"2020, 4, 27\",\n    \"2020, 5, 5\",\n    \"2020, 5, 21\",\n    \"2020, 6, 1\",\n    \"2020, 12, 25\",\n    \"2020, 12, 26\",\n    \"2021, 1, 1\",\n    \"2021, 4, 5\",\n    \"2021, 4, 27\",\n    \"2021, 5, 24\",\n    \"2021, 5, 31\",\n    \"2021, 12, 25\",\n    \"2021, 12, 26\",\n    \"2022, 1, 1\",\n    \"2022, 4, 18\",\n    \"2022, 4, 27\",\n    \"2022, 5, 26\",\n    \"2022, 6, 6\",\n    \"2022, 12, 25\",\n    \"2022, 12, 26\",\n    \"2023, 1, 1\",\n    \"2023, 4, 10\",\n    \"2023, 4, 27\",\n    \"2023, 5, 18\",\n    \"2023, 5, 28\",\n    \"2023, 12, 25\",\n    \"2023, 12, 26\",\n];\n","import IHours from \"../../common/interfaces/IHours\";\nimport IDay from \"../../common/interfaces/IDay\";\nimport IHoursColumn from \"../../hours/hours-constants/IHoursColumn\";\n\nimport { columns } from \"../../hours/hours-constants/hoursConstants.component\";\n\nexport default {\n    getCSV(data: IHours): void {\n        const csvColumns = columns.map((column) => column);\n        csvColumns.unshift({\n            description: \"Dag\",\n            id: \"day\",\n            enabled: true,\n        });\n        csvColumns.push({\n            description: \"Toelichting\",\n            id: \"explanation\",\n            enabled: true,\n        });\n\n        const header = csvColumns\n            .map((column: IHoursColumn) => column.description)\n            .join(\",\");\n        const csvData = data.days.map((day: IDay) => {\n            const row = csvColumns\n                .map((column: IHoursColumn) => day[column.id].toString())\n                .join(\",\");\n            return row;\n        });\n        csvData.unshift(header);\n\n        const csvContent = \"data:text/csv;charset=utf-8,\" + csvData.join(\"\\n\");\n\n        const encodedUri = encodeURI(csvContent);\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        link.setAttribute(\n            \"download\",\n            \"uren-intern - \" + data.profile.displayName + \".csv\",\n        );\n        document.body.appendChild(link); // Required for FF\n\n        link.click(); // This will download the data file.\n    },\n};\n","import React from \"react\";\nimport {\n    Badge,\n    IconButton,\n    Popover,\n    List,\n    ListItem,\n    ListItemText,\n} from \"@material-ui/core\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nexport default function ValidationNotification({\n    messages,\n}: {\n    messages: string[];\n}) {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? \"simple-popover\" : undefined;\n\n    return (\n        <>\n            <IconButton aria-label=\"Validation messages\" onClick={handleClick}>\n                <Badge badgeContent={messages.length} color=\"error\">\n                    <WarningIcon />\n                </Badge>\n            </IconButton>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"center\",\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                }}\n            >\n                <List>\n                    {messages.map((message, index) => {\n                        return (\n                            <ListItem key={index}>\n                                <ListItemText primary={message} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n            </Popover>\n        </>\n    );\n}\n","import React from \"react\";\nimport {\n    Toolbar,\n    FormControl,\n    IconButton,\n    InputLabel,\n    Menu,\n    MenuItem,\n    Select,\n    TextField,\n    Typography,\n    makeStyles,\n} from \"@material-ui/core\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\n\nimport ValidationNotification from \"../validation/ValidationNotification.component\";\nimport * as HoursConstants from \"../hours-constants/hoursConstants.component\";\n\ninterface IProps {\n    isTemplate: boolean;\n    client: string;\n    project: string;\n    expandColumns: boolean;\n    handleInputChange: any;\n    applyTemplate: any;\n    getReport: any;\n    getCSV: Function;\n    validationMessages: string[];\n    saved: boolean;\n    approved: boolean;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    alert: {\n        color: \"red\",\n    },\n    spacingLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    spacingRight: {\n        marginRight: theme.spacing(2),\n    },\n    right: {\n        marginLeft: \"auto\",\n        display: \"inline-flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n    },\n}));\n\nconst months = HoursConstants.months;\nconst years = HoursConstants.years;\nconst currentYear = new Date().getFullYear();\nconst currentMonth = new Date().getMonth() + 1;\n\nconst HoursHeader = ({\n    isTemplate,\n    client,\n    project,\n    expandColumns,\n    handleInputChange,\n    applyTemplate,\n    getReport,\n    getCSV,\n    validationMessages,\n    saved,\n    approved,\n}: IProps) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleClick = (event: any) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const onExpandColumns = () => {\n        expandColumns = !expandColumns;\n        handleInputChange(\"expandColumns\", expandColumns);\n    };\n\n    if (isTemplate)\n        return (\n            <ClientAndProject\n                classes={classes}\n                client={client}\n                project={project}\n                approved={approved}\n                handleInputChange={handleInputChange}\n            />\n        );\n    return (\n        <Toolbar disableGutters>\n            <FormControl className={classes.spacingLeft}>\n                <InputLabel id=\"select-month-label\">Maand</InputLabel>\n                <Select\n                    labelId=\"select-month-label\"\n                    id=\"select-month-label\"\n                    defaultValue={currentMonth}\n                    onChange={(event) =>\n                        handleInputChange(\"month\", event.target.value)\n                    }\n                >\n                    {months.map((month) => {\n                        return (\n                            <MenuItem value={month.id} key={month.id}>\n                                {month.description}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.spacingLeft}>\n                <InputLabel id=\"select-year-label\">Jaar</InputLabel>\n                <Select\n                    labelId=\"select-year-label\"\n                    id=\"select-year-label\"\n                    defaultValue={currentYear}\n                    onChange={(event) =>\n                        handleInputChange(\"year\", event.target.value)\n                    }\n                >\n                    {years.map((year) => {\n                        return (\n                            <MenuItem value={year} key={year}>\n                                {year}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n            <ClientAndProject\n                classes={classes}\n                client={client}\n                project={project}\n                approved={approved}\n                handleInputChange={handleInputChange}\n            />\n\n            {validationMessages?.length > 0 ? (\n                <ValidationNotification messages={validationMessages} />\n            ) : null}\n            <div className={classes.right}>\n                {saved ? (\n                    <Typography\n                        variant=\"overline\"\n                        display=\"block\"\n                        className={classes.spacingLeft}\n                    >\n                        Opgeslagen\n                    </Typography>\n                ) : null}\n                {approved ? (\n                    <>\n                        <DoneIcon\n                            color=\"primary\"\n                            className={classes.spacingRight}\n                        />\n                        <Typography className={classes.spacingRight}>\n                            Akkoord\n                        </Typography>\n                    </>\n                ) : null}\n\n                <div>\n                    <IconButton\n                        aria-label=\"more\"\n                        aria-controls=\"header-menu\"\n                        aria-haspopup=\"true\"\n                        id=\"headerMenuButton\"\n                        onClick={handleClick}\n                    >\n                        <MoreVertIcon />\n                    </IconButton>\n                    <Menu\n                        id=\"headerMenu\"\n                        anchorEl={anchorEl}\n                        keepMounted\n                        open={open}\n                        onClose={handleClose}\n                    >\n                        <MenuItem\n                            onClick={() => {\n                                applyTemplate();\n                                handleClose();\n                            }}\n                            disabled={Boolean(approved)}\n                            id=\"applyTemplate\"\n                        >\n                            Pas template toe\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() => {\n                                onExpandColumns();\n                                handleClose();\n                            }}\n                            id=\"expandColumns\"\n                        >\n                            Toon alle velden\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() => {\n                                getReport(\"intern\");\n                                handleClose();\n                            }}\n                            id=\"getInternReport\"\n                        >\n                            Download interne PDF\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() => {\n                                getReport(\"extern\");\n                                handleClose();\n                            }}\n                            id=\"getExternReport\"\n                        >\n                            Download externe PDF\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() => {\n                                getCSV();\n                                handleClose();\n                            }}\n                            id=\"getInternalCSV\"\n                        >\n                            Download interne CSV\n                        </MenuItem>\n                    </Menu>\n                </div>\n            </div>\n        </Toolbar>\n    );\n};\n\nexport default HoursHeader;\n\ninterface IClientAndProjectProps {\n    classes: any;\n    client: string;\n    project: string;\n    handleInputChange: any;\n    approved: boolean;\n}\n\nconst ClientAndProject = ({\n    classes,\n    client,\n    project,\n    handleInputChange,\n    approved,\n}: IClientAndProjectProps) => (\n    <>\n        <TextField\n            className={classes.spacingLeft}\n            id=\"client\"\n            label=\"Klant\"\n            value={client}\n            disabled={approved}\n            onChange={(event) =>\n                handleInputChange(\"client\", event.target.value)\n            }\n        />\n        <TextField\n            className={classes.spacingLeft}\n            id=\"project\"\n            label=\"Project\"\n            value={project}\n            disabled={approved}\n            onChange={(event) =>\n                handleInputChange(\"project\", event.target.value)\n            }\n        />\n    </>\n);\n","import React from \"react\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport IDay from \"../../common/interfaces/IDay\";\n\nimport * as HoursConstants from \"../hours-constants/hoursConstants.component\";\n\ninterface IProps {\n    expandColumns: boolean;\n    days: IDay[];\n}\n\nconst columns = HoursConstants.columns;\n\nconst HoursFooter = ({ expandColumns, days }: IProps) => {\n    const getTotal = (column: string) => {\n        const values = days.map((x) => x[column]);\n        return values.reduce((total, currentValue) => {\n            return Number(total) + Number(currentValue);\n        });\n    };\n\n    if (!days.length) return null;\n\n    return (\n        <TableFooter>\n            <TableRow>\n                <TableCell> Totaal</TableCell>\n                <TableCell></TableCell>\n                {columns.map((column) => {\n                    if (!column.enabled && !expandColumns) {\n                        return null;\n                    }\n                    return (\n                        <TableCell align=\"right\" key={\"footer-\" + column.id}>\n                            {getTotal(column.id)}\n                        </TableCell>\n                    );\n                })}\n                <TableCell align=\"right\"></TableCell>\n            </TableRow>\n        </TableFooter>\n    );\n};\n\nexport default HoursFooter;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport IDay from \"../../common/interfaces/IDay\";\n\nconst useStyles = makeStyles((theme) => ({\n    textField: {\n        width: \"90%\",\n    },\n}));\n\ninterface IProps {\n    row: any;\n    column: string;\n    days: IDay[];\n    handleChange: any;\n    save: any;\n    readOnly: boolean;\n}\n\nconst HoursCell = ({\n    row,\n    column,\n    days,\n    handleChange,\n    save,\n    readOnly,\n}: IProps) => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(row[column]);\n\n    React.useEffect(() => {\n        setValue(row[column]);\n    }, [row, column, days]);\n\n    const handleHoursInput = (value: string, column: string, day: number) => {\n        const daysInput = [...days];\n        daysInput[day][column] = value;\n        setValue(value);\n        handleChange(\"days\", daysInput);\n        save();\n    };\n\n    /* Jump with arrow keys to another field */\n    const onKeyDown = (event: any) => {\n        const column = event.target.closest(\"td\");\n        const row = column.parentNode;\n        const index = Array.from(row.children).indexOf(column);\n\n        switch (event.keyCode) {\n            case 40:\n                /* arrow key down */\n                const nextRow = row.nextSibling;\n                if (nextRow !== null) {\n                    nextRow.children[index].querySelector(\"input\").focus();\n                }\n                break;\n            case 38:\n                /* arrow key up */\n                const prevRow = row.previousSibling;\n                if (prevRow !== null) {\n                    prevRow.children[index].querySelector(\"input\").focus();\n                }\n                break;\n            case 37:\n                /* arrow key left */\n                if (column.previousElementSibling.tagName === \"TD\") {\n                    column.previousElementSibling\n                        .querySelector(\"input\")\n                        .focus();\n                }\n                break;\n            case 39:\n                /* arrow key right */\n                if (column.nextElementSibling.tagName === \"TD\") {\n                    column.nextElementSibling.querySelector(\"input\").focus();\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    if (!row) return null;\n\n    return (\n        <TableCell align=\"left\" key={row.day + \"-\" + column} padding=\"none\">\n            {Boolean(readOnly) ? (\n                value\n            ) : (\n                <TextField\n                    id={column}\n                    className={classes.textField}\n                    fullWidth={false}\n                    inputProps={{\n                        style: {\n                            textAlign: \"left\",\n                        },\n                        day: row.day,\n                    }}\n                    value={value}\n                    onChange={(event) => setValue(event.target.value)}\n                    onBlur={(event) =>\n                        handleHoursInput(\n                            event.target.value,\n                            column,\n                            row.day - 1,\n                        )\n                    }\n                    onKeyDown={onKeyDown}\n                />\n            )}\n        </TableCell>\n    );\n};\n\nexport default HoursCell;\n","import React from \"react\";\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core\";\nimport { columns } from \"../hours-constants/hoursConstants.component\";\n\ninterface IProps {\n    expandColumns: boolean;\n}\n\nconst HoursTableHead = ({ expandColumns }: IProps) => {\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell></TableCell>\n                <TableCell></TableCell>\n                {columns.map((column) => {\n                    if (!column.enabled && !expandColumns) {\n                        return null;\n                    }\n                    return (\n                        <TableCell key={\"header-\" + column.id} padding=\"none\">\n                            {column.description}\n                        </TableCell>\n                    );\n                })}\n                <TableCell>Toelichting</TableCell>\n            </TableRow>\n        </TableHead>\n    );\n};\n\nexport default HoursTableHead;\n","import React from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    TextField,\n} from \"@material-ui/core\";\n\ninterface IProps {\n    input: string;\n    save: any;\n    cancel: any;\n    readOnly: boolean;\n    show: boolean;\n}\n\nconst HoursComment = ({ input, save, cancel, readOnly, show }: IProps) => {\n    const [comment, setComment] = React.useState(input);\n\n    const onCancel = () => {\n        cancel();\n    };\n\n    const onSave = () => {\n        save(comment);\n    };\n\n    React.useEffect(() => {\n        setComment(input);\n    }, [input, show]);\n\n    return (\n        <Dialog\n            open={show}\n            onClose={onCancel}\n            aria-labelledby=\"form-dialog-title\"\n            fullWidth={true}\n            maxWidth=\"md\"\n            id=\"commentDialog\"\n        >\n            <DialogTitle id=\"form-dialog-title\">Toelichting</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"comment\"\n                    value={comment}\n                    onChange={(event) => {\n                        setComment(event.target.value);\n                    }}\n                    disabled={readOnly}\n                    fullWidth\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onCancel}>Annuleer</Button>\n                <Button onClick={onSave} color=\"primary\">\n                    Bewaar\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default HoursComment;\n","import React from \"react\";\nimport {\n    makeStyles,\n    Button,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    Tooltip,\n    Paper,\n} from \"@material-ui/core\";\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\n\nimport * as HoursConstants from \"../hours-constants/hoursConstants.component\";\nimport HoursFooter from \"../hours-footer/HoursFooter.component\";\nimport HoursCell from \"../hours-cell/HoursCell.component\";\nimport HoursTableHead from \"../hours-table-header/HoursTableHeader.component\";\nimport HoursComment from \"../hours-comment/HoursComment.component\";\n\nimport IDay from \"../../common/interfaces/IDay\";\n\ninterface IProps {\n    expandColumns: boolean;\n    days: IDay[];\n    handleChange: any;\n    save: any;\n    readOnly: any;\n}\n\nconst columns = HoursConstants.columns;\n\nconst useStyles = makeStyles((theme) => ({\n    tableContainer: {\n        overflowX: \"inherit\",\n    },\n}));\n\nconst HoursGrid = ({\n    expandColumns,\n    days,\n    handleChange,\n    save,\n    readOnly,\n}: IProps) => {\n    const classes = useStyles();\n    const getRowClass = (isWeekend: boolean, isPublicHoliday: boolean) => {\n        let output = \"\";\n        output += isWeekend ? \" isWeekend\" : \"\";\n        output += isPublicHoliday ? \" isPublicHoliday\" : \"\";\n        return output;\n    };\n\n    const [explanation, setExplanation] = React.useState(\"\");\n    const [showComment, setShowComment] = React.useState(false);\n    const [rowIndex, setRowIndex] = React.useState(0);\n\n    const getDayName = (date: string, index: number) => {\n        const days = [\n            \"Zondag\",\n            \"Maandag\",\n            \"Dinsdag\",\n            \"Woensdag\",\n            \"Donderdag\",\n            \"Vrijdag\",\n            \"Zaterdag\",\n        ];\n\n        if (!date) {\n            return days[index];\n        }\n\n        const dateObj = new Date(date);\n        return days[dateObj.getDay()];\n    };\n\n    const openComment = (explanation: string, index: number) => {\n        setExplanation(explanation);\n        setRowIndex(index);\n        setShowComment(true);\n    };\n\n    const onCancelComment = () => {\n        setShowComment(false);\n    };\n\n    const onSaveComment = (text: string) => {\n        days[rowIndex].explanation = text;\n        setShowComment(false);\n        save();\n    };\n\n    return (\n        <TableContainer component={Paper} className={classes.tableContainer}>\n            <Table stickyHeader size=\"small\" aria-label=\"simple table\">\n                <HoursTableHead expandColumns={expandColumns} />\n                <TableBody>\n                    {days.map((row, index) => {\n                        return (\n                            <TableRow\n                                key={row.day}\n                                className={getRowClass(\n                                    row.isWeekend,\n                                    row.isPublicHoliday,\n                                )}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.isPublicHoliday ? (\n                                        <Tooltip title=\"Dit is een feestdag\">\n                                            <span>\n                                                {getDayName(row.date, index)}\n                                            </span>\n                                        </Tooltip>\n                                    ) : (\n                                        getDayName(row.date, index)\n                                    )}\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.day}\n                                </TableCell>\n                                {columns.map((column, i) => {\n                                    if (!column.enabled && !expandColumns) {\n                                        return null;\n                                    }\n                                    return (\n                                        <HoursCell\n                                            key={`${column.id}-${i}`}\n                                            row={row}\n                                            column={column.id}\n                                            handleChange={handleChange}\n                                            save={save}\n                                            days={days}\n                                            readOnly={readOnly}\n                                        />\n                                    );\n                                })}\n                                <TableCell>\n                                    <Button\n                                        onClick={(event) => {\n                                            openComment(row.explanation, index);\n                                        }}\n                                        id={\"commentButton-\" + index}\n                                    >\n                                        <ChatBubbleOutlineIcon\n                                            color={\n                                                row.explanation === \"\"\n                                                    ? \"disabled\"\n                                                    : \"primary\"\n                                            }\n                                        />\n                                    </Button>\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n                <HoursFooter expandColumns={expandColumns} days={days} />\n            </Table>\n\n            <HoursComment\n                input={explanation}\n                readOnly={readOnly}\n                save={onSaveComment}\n                cancel={onCancelComment}\n                show={showComment}\n            />\n        </TableContainer>\n    );\n};\n\nexport default HoursGrid;\n","import React from \"react\";\nimport Moment from \"react-moment\";\n\nimport IDay from \"../../common/interfaces/IDay\";\n\nexport default {\n    validateWeekend(day: IDay): any {\n        const hours = this.getTotalHoursPerDay(day);\n        if (day.isWeekend && hours > 0) {\n            return (\n                <>\n                    <span>\n                        Weet je zeker dat je in het weekend hebt gewerkt op:{\" \"}\n                    </span>\n                    <Moment format=\"DD/MM\">{day.date}</Moment>\n                </>\n            );\n        }\n        return;\n    },\n    validateTotalHoursOfMonth(days: IDay[]): string {\n        let userTotalHours = 0;\n        let potentialTotalHours = 0;\n        days.forEach((day: IDay) => {\n            if (day.isWeekend) {\n                return;\n            }\n            userTotalHours += this.getTotalHoursPerDay(day);\n            potentialTotalHours += 8;\n        });\n\n        if (userTotalHours < potentialTotalHours) {\n            return (\n                \"Er zijn te weinig uren (\" +\n                userTotalHours +\n                \") ingevuld ten opzichte van het aantal te werken uren deze maand (\" +\n                potentialTotalHours +\n                \"). Klopt dat?\"\n            );\n        }\n\n        if (userTotalHours > potentialTotalHours) {\n            return (\n                \"Er zijn te veel uren (\" +\n                userTotalHours +\n                \") ingevuld ten opzichte van het aantal te werken uren deze maand (\" +\n                potentialTotalHours +\n                \"). Klopt dat?\"\n            );\n        }\n        return \"\";\n    },\n    getTotalHoursPerDay(day: IDay): number {\n        const output = Number(\n            [\n                Number(day.worked),\n                Number(day.overtime),\n                Number(day.sick),\n                Number(day.holiday),\n                Number(day.publicHoliday),\n                Number(day.available),\n                Number(day.education),\n                Number(day.other),\n                Number(day.standBy),\n            ].reduce((a, b) => a + b, 0),\n        );\n        return output;\n    },\n};\n","import IDay from \"../common/interfaces/IDay\";\nimport * as HoursConstants from \"../hours/hours-constants/hoursConstants.component\";\n\nexport default {\n    getDayOfTheWeek(item: IDay, isTemplate: boolean): number {\n        if (isTemplate) {\n            return item.day - 1;\n        }\n        if (item.date instanceof Date) {\n            /* item.date is a timestamp */\n            return new Date(item.date).getDay();\n        }\n        /* No valid date, return -1 */\n        return -1;\n    },\n    isPublicHoliday(date: Date): boolean {\n        const publicHolidays = HoursConstants.publicHolidays.map((x) =>\n            new Date(x).getTime(),\n        );\n        return publicHolidays.includes(date.getTime());\n    },\n    isWeekend(item: IDay): boolean {\n        return [0, 6].includes(item.dayOfTheWeek);\n    },\n    parseDate(date: any): Date {\n        if (date instanceof Date) {\n            /* date is valid date object */\n            return new Date(date);\n        }\n        if (date.toDate() instanceof Date) {\n            /* date is a timestamp */\n            return new Date(date.toDate());\n        }\n        return new Date();\n    },\n    initDays(\n        days: IDay[],\n        isTemplate: boolean,\n        year: number,\n        month: number,\n    ): IDay[] {\n        return days.map((x, index) => {\n            const day = x;\n\n            if (isTemplate) {\n                day.dayOfTheWeek = index;\n                day.isWeekend = this.isWeekend(x);\n                return day;\n            }\n\n            if (!day.date) {\n                day.date = new Date(year, month - 1, index);\n            }\n\n            day.date = this.parseDate(x.date);\n            day.dayOfTheWeek = this.getDayOfTheWeek(x, isTemplate);\n            day.isWeekend = this.isWeekend(x);\n            day.isPublicHoliday = this.isPublicHoliday(x.date);\n            return day;\n        });\n    },\n};\n","import React, { Component } from \"react\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\n\nimport Hours from \"../../firebase/data/Hours\";\nimport JSReport from \"../../export/pdf/JSReport\";\nimport ExportToCSV from \"../../export/csv/ExportToCSV\";\n\nimport HoursHeader from \"../hours-header/HoursHeader.component\";\nimport HoursGrid from \"../hours-grid/HoursGrid.component\";\nimport Validators from \"../validation/Validators\";\nimport Utils from \"../../common/Utils\";\n\nimport IDay from \"../../common/interfaces/IDay\";\nimport IProfile from \"../../common/interfaces/IProfile\";\n\ninterface IProps {\n    type: string;\n    profile: IProfile;\n    notification: any;\n}\n\nclass HoursContainer extends Component<IProps> {\n    state = {\n        id: \"\",\n        days: [],\n        month: 0,\n        year: 0,\n        expandColumns: true,\n        client: \"\",\n        project: \"\",\n        profileId: \"\",\n        profile: {\n            id: \"\",\n            displayName: \"\",\n            microsoftId: \"\",\n            email: \"\",\n            isAdmin: false,\n        },\n        saved: false,\n        approved: false,\n        showValidationMessage: false,\n        validationMessages: [],\n        isLoading: false,\n        isTemplate: false,\n    };\n\n    componentDidMount() {\n        const year = new Date().getFullYear();\n        const month = new Date().getMonth() + 1;\n        const { type, profile } = this.props;\n        const isTemplate = type === \"template\";\n\n        this.setState(\n            {\n                isTemplate,\n                profile,\n                profileId: profile.id,\n                year,\n                month,\n            },\n            () => {\n                if (isTemplate) {\n                    this.fetchTemplate(profile.id);\n                } else {\n                    this.fetchMonth();\n                }\n            },\n        );\n    }\n\n    componentWillUnmount() {\n        document\n            .querySelector(\"input\")!\n            .removeEventListener(\"blur\", () => this.handleInputChange);\n    }\n\n    fetchMonth = async () => {\n        this.setState({ isLoading: true });\n        const instance = await Hours.getHoursForProfile(\n            Number(this.state.month),\n            Number(this.state.year),\n            this.state.profileId,\n        );\n\n        if (instance.length === 1) {\n            this.setState(\n                {\n                    ...instance[0],\n                    id: instance[0].id,\n                    approved: instance[0].approved,\n                },\n                () => {\n                    this.initData();\n                },\n            );\n        } else {\n            this.setState(\n                {\n                    approved: false,\n                    days: this.getDaysInMonth(\n                        this.state.month,\n                        this.state.year,\n                    ),\n                },\n                () => {\n                    this.initData();\n                },\n            );\n        }\n\n        this.setState({ isLoading: false });\n    };\n\n    fetchTemplate = async (profileId: string) => {\n        this.setState({ isLoading: true });\n\n        Hours.getTemplate(profileId)\n            .then((response) => {\n                if (response && response?.exists) {\n                    const data = response.data();\n                    if (data) {\n                        this.setState(\n                            {\n                                days: data.days,\n                                client: data.client,\n                                project: data.project,\n                                id: response.id,\n                            },\n                            () => {\n                                this.initData();\n                            },\n                        );\n                    }\n                } else {\n                    this.getTemplateWeek();\n                }\n                this.setState({ isLoading: false });\n            })\n            .catch((error) => {\n                this.props.notification(\n                    \"Het is niet gelukt een template op te halen: \" + error,\n                );\n            });\n    };\n\n    initData = () => {\n        const days = Utils.initDays(\n            this.state.days,\n            this.state.isTemplate,\n            Number(this.state.year),\n            Number(this.state.month),\n        );\n        this.setState({ days: days }, () => {\n            this.isValid();\n        });\n    };\n\n    applyTemplate = async () => {\n        this.setState({ isLoading: true });\n\n        Hours.getTemplate(this.state.profileId)\n            .then((response) => {\n                if (response && response?.exists) {\n                    const data = response.data();\n                    if (data) {\n                        const templateDays = data.days;\n                        const { days } = this.state;\n\n                        const mergedDays = days.map((day: IDay) => {\n                            const sameDay = templateDays.find(\n                                (templateDay: IDay) => {\n                                    const monthDayOfTheWeek = day.dayOfTheWeek;\n                                    return (\n                                        monthDayOfTheWeek ===\n                                        templateDay.day - 1\n                                    );\n                                },\n                            );\n\n                            if (day !== sameDay) {\n                                Object.keys(day).forEach((item) => {\n                                    if (day[item] === \"\") {\n                                        day[item] = sameDay[item];\n                                    }\n                                });\n                            }\n\n                            return day;\n                        });\n                        this.setState(\n                            {\n                                isLoading: false,\n                                days: mergedDays,\n                                client: data.client,\n                                project: data.project,\n                                saved: true,\n                            },\n                            () => this.save(),\n                        );\n                    }\n                } else {\n                    this.props.notification(\n                        \"Er is nog geen template aangemaakt.\",\n                    );\n                }\n                this.setState({ isLoading: false });\n            })\n            .catch((error) => {\n                this.props.notification(\n                    \"Het is niet gelukt een template op te halen: \" + error,\n                );\n            });\n    };\n\n    handleInputChange = (name: string, value: any) => {\n        this.setState({ [name]: value }, () => {\n            if ([\"month\", \"year\"].includes(name)) {\n                this.setState({ isLoading: true });\n                this.fetchMonth();\n            }\n        });\n    };\n\n    getTemplateWeek = () => {\n        const rows = [];\n\n        for (let i = 1; i <= 7; i++) {\n            rows.push({\n                day: i,\n                dayOfTheWeek: i,\n                isWeekend: i === 1 || i === 7,\n                worked: \"\",\n                overtime: \"\",\n                sick: \"\",\n                holiday: \"\",\n                publicHoliday: \"\",\n                available: \"\",\n                education: \"\",\n                other: \"\",\n                standBy: \"\",\n                kilometers: \"\",\n                explanation: \"\",\n            });\n        }\n\n        return this.setState({ days: rows });\n    };\n\n    getDaysInMonth(month: number, year: number) {\n        const daysInAMonth = new Date(year, month, 0).getDate();\n\n        const rows = [];\n\n        for (let i = 1; i <= daysInAMonth; i++) {\n            rows.push({\n                day: i,\n                date: new Date(year, month - 1, i),\n                worked: \"\",\n                overtime: \"\",\n                sick: \"\",\n                holiday: \"\",\n                publicHoliday: \"\",\n                available: \"\",\n                education: \"\",\n                other: \"\",\n                standBy: \"\",\n                kilometers: \"\",\n                explanation: \"\",\n            });\n        }\n\n        return rows;\n    }\n\n    submitHours = () => {\n        const id =\n            this.state.year +\n            \"-\" +\n            this.state.month +\n            \"-\" +\n            this.state.profile.displayName;\n\n        const document = {\n            id: id,\n            client: this.state.client,\n            days: this.state.days,\n            profile: this.state.profile,\n            profileId: this.state.profileId,\n            project: this.state.project,\n            year: this.state.year,\n            month: this.state.month,\n            approved: this.state.approved,\n        };\n\n        Hours.updateHours(id, document)\n            .then(() => {\n                this.setState({ saved: true });\n            })\n            .catch((error) => {\n                this.props.notification(\n                    \"Het is niet gelukt om de uren te bewaren: \" + error,\n                );\n            });\n    };\n\n    submitTemplate = (\n        days: IDay[],\n        client: string,\n        project: string,\n        profile: IProfile,\n    ) => {\n        const data = days.map((day) => {\n            delete day.date;\n            delete day.dayOfTheWeek;\n            return day;\n        });\n\n        Hours.updateTemplate(\n            profile.id,\n            data,\n            client,\n            project,\n            profile.displayName,\n        )\n            .then(() => {\n                this.props.notification(\"Template opgeslagen\");\n            })\n            .catch((error) => {\n                this.props.notification(\n                    \"Het is niet gelukt om het template te bewaren: \" + error,\n                );\n            });\n    };\n\n    save = () => {\n        this.setState({ saved: false });\n\n        if (this.state.isTemplate) {\n            const { days, client, project, profile } = this.state;\n            this.submitTemplate(days, client, project, profile);\n            return;\n        }\n\n        this.isValid();\n\n        this.submitHours();\n    };\n\n    isValid = () => {\n        if (this.state.isTemplate) {\n            return true;\n        }\n\n        const validationMessages = [];\n        this.state.days.forEach((day) => {\n            const weekendValidation = Validators.validateWeekend(day);\n            if (weekendValidation) {\n                validationMessages.push(weekendValidation);\n            }\n        });\n\n        const totalHoursValidation = Validators.validateTotalHoursOfMonth(\n            this.state.days,\n        );\n        if (totalHoursValidation) {\n            validationMessages.push(totalHoursValidation);\n        }\n\n        this.setState({\n            validationMessages: validationMessages,\n        });\n\n        return true;\n    };\n\n    closeValidationMessage = (event: any, reason: string) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        this.setState({ showValidationMessage: false });\n    };\n\n    getReport = (type: string) => {\n        this.setState({ isLoading: true });\n\n        JSReport.getReport(this.state, type)\n            .then(() => {\n                this.setState({ isLoading: false });\n            })\n            .catch((error) => {\n                this.props.notification(\n                    \"Het is niet gelukt om een PDF te maken: \" + error,\n                );\n            });\n    };\n\n    getCSV = () => {\n        ExportToCSV.getCSV(this.state);\n    };\n\n    render() {\n        if (!this.props.profile.id) return null;\n\n        return (\n            <form noValidate autoComplete=\"off\">\n                <HoursHeader\n                    handleInputChange={this.handleInputChange}\n                    client={this.state.client}\n                    project={this.state.project}\n                    expandColumns={this.state.expandColumns}\n                    isTemplate={this.state.isTemplate}\n                    applyTemplate={this.applyTemplate}\n                    getReport={this.getReport}\n                    getCSV={this.getCSV}\n                    validationMessages={this.state.validationMessages}\n                    saved={this.state.saved}\n                    approved={this.state.approved}\n                />\n\n                {this.state.isLoading ? (\n                    <LinearProgress />\n                ) : (\n                    <HoursGrid\n                        expandColumns={this.state.expandColumns}\n                        days={this.state.days}\n                        handleChange={this.handleInputChange}\n                        save={this.save}\n                        readOnly={this.state.approved}\n                    />\n                )}\n            </form>\n        );\n    }\n}\n\nexport default HoursContainer;\n","import React from \"react\";\nimport {\n    Avatar,\n    Container,\n    CssBaseline,\n    LinearProgress,\n    Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: \"transparent\",\n    },\n}));\n\nexport default function PreLoad() {\n    const classes = useStyles();\n\n    return (\n        <>\n            <LinearProgress />\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline />\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <img\n                            src=\"./Icon-green.svg\"\n                            alt=\"CODEZILLA logo\"\n                            height=\"100%\"\n                            width=\"100%\"\n                        ></img>\n                    </Avatar>\n                    <Typography id=\"preloadTitle\" component=\"h1\" variant=\"h4\">\n                        CODEZILLA Hours\n                    </Typography>\n                    <Typography\n                        id=\"preloadSubTitle\"\n                        component=\"h2\"\n                        variant=\"subtitle1\"\n                    >\n                        Bezig met aanmelden...\n                    </Typography>\n                </div>\n            </Container>\n        </>\n    );\n}\n","import IAdminOverviewColumn from \"../../common/interfaces/IAdminOverviewColumn\";\n\nexport const columns: IAdminOverviewColumn[] = [\n    {\n        id: \"name\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Naam\",\n    },\n    {\n        id: \"client\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Klant\",\n    },\n    {\n        id: \"project\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Project\",\n    },\n    {\n        id: \"approved\",\n        numeric: false,\n        disablePadding: true,\n        label: \"Akkoord\",\n    },\n    {\n        id: \"worked\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Gewerkt\",\n    },\n    {\n        id: \"overtime\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Overwerk\",\n    },\n    {\n        id: \"sick\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Ziek\",\n    },\n    {\n        id: \"holiday\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Verlof\",\n    },\n    {\n        id: \"publicHoliday\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Feestdag\",\n    },\n    {\n        id: \"available\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Beschikbaar\",\n    },\n    {\n        id: \"education\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Opleiding\",\n    },\n    {\n        id: \"other\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Overig\",\n    },\n    {\n        id: \"standBy\",\n        numeric: true,\n        disablePadding: true,\n        label: \"stand-by\",\n    },\n    {\n        id: \"kilometers\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Km\",\n    },\n];\n","import React from \"react\";\nimport {\n    Checkbox,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableSortLabel,\n} from \"@material-ui/core/\";\n\nimport * as Constants from \"./Constants\";\n\ninterface IProps {\n    classes: any;\n    numSelected: number;\n    onRequestSort: any;\n    onSelectAllClick: any;\n    order: any;\n    orderBy: any;\n    rowCount: number;\n}\n\nexport default function OverviewHeader({\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n}: IProps) {\n    const createSortHandler = (property: string) => (event: any) => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all desserts\" }}\n                    />\n                </TableCell>\n                {Constants.columns.map((headCell) => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                        className={classes.small}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n","import React from \"react\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n    Button,\n    MenuItem,\n    Select,\n    InputLabel,\n    FormControl,\n    Typography,\n    Toolbar,\n} from \"@material-ui/core/\";\n\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nimport * as HoursConstants from \"../../hours/hours-constants/hoursConstants.component\";\n\nOverviewToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    currentMonth: PropTypes.number.isRequired,\n    currentYear: PropTypes.number.isRequired,\n    onChangeDate: PropTypes.func.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        paddingRight: theme.spacing(1),\n    },\n    formControl: {\n        marginLeft: theme.spacing(2),\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: \"1\",\n    },\n}));\n\ninterface IProps {\n    numSelected: number;\n    currentMonth: number;\n    currentYear: number;\n    onChangeDate: any;\n    approve: any;\n}\n\nexport default function OverviewToolbar({\n    numSelected,\n    currentMonth,\n    currentYear,\n    onChangeDate,\n    approve,\n}: IProps) {\n    const classes = useStyles();\n    const [month, setMonth] = React.useState(currentMonth);\n    const [year, setYear] = React.useState(currentYear);\n\n    const onChangeMonth = (value: number) => {\n        setMonth(value);\n        onChangeDate(value, year);\n    };\n\n    const onChangeYear = (value: number) => {\n        setYear(value);\n        onChangeDate(month, value);\n    };\n\n    const onApprove = () => {\n        approve();\n    };\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography\n                    className={classes.title}\n                    color=\"inherit\"\n                    variant=\"subtitle1\"\n                >\n                    {numSelected} geselecteerd\n                </Typography>\n            ) : (\n                <Typography\n                    className={classes.title}\n                    variant=\"h6\"\n                    id=\"tableTitle\"\n                >\n                    Beheer\n                </Typography>\n            )}\n\n            {numSelected > 0 ? (\n                <Button\n                    variant=\"outlined\"\n                    startIcon={<DoneIcon />}\n                    onClick={onApprove}\n                >\n                    Akkoord\n                </Button>\n            ) : (\n                <>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"select-month-label\">Maand</InputLabel>\n                        <Select\n                            labelId=\"select-month-label\"\n                            id=\"select-month-label\"\n                            value={month}\n                            onChange={(event) =>\n                                onChangeMonth(Number(event.target.value))\n                            }\n                        >\n                            {HoursConstants.months.map((month) => {\n                                return (\n                                    <MenuItem value={month.id} key={month.id}>\n                                        {month.description}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"select-year-label\">Jaar</InputLabel>\n                        <Select\n                            labelId=\"select-year-label\"\n                            id=\"select-year-label\"\n                            value={year}\n                            onChange={(event) =>\n                                onChangeYear(Number(event.target.value))\n                            }\n                        >\n                            {HoursConstants.years.map((year) => {\n                                return (\n                                    <MenuItem value={year} key={year}>\n                                        {year}\n                                    </MenuItem>\n                                );\n                            })}\n                        </Select>\n                    </FormControl>\n                </>\n            )}\n        </Toolbar>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Checkbox,\n    Link,\n    Paper,\n    Table,\n    TableContainer,\n    TableBody,\n    TableRow,\n    TableCell,\n    TableFooter,\n} from \"@material-ui/core/\";\nimport { NavLink } from \"react-router-dom\";\nimport DoneIcon from \"@material-ui/icons/Done\";\n\nimport Hours from \"../firebase/data/Hours\";\n\nimport * as Constants from \"./overview/Constants\";\nimport IAdminOverviewColumn from \"../common/interfaces/IAdminOverviewColumn\";\nimport IDay from \"../common/interfaces/IDay\";\nimport IHours from \"../common/interfaces/IHours\";\n\nimport OverviewHeader from \"./overview/OverviewHeader.component\";\nimport OverviewToolbar from \"./overview/OverviewToolbar.component\";\n\nfunction descendingComparator(a: any, b: any, orderBy: string) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order: string, orderBy: string) {\n    return order === \"desc\"\n        ? (a: any, b: any) => descendingComparator(a, b, orderBy)\n        : (a: any, b: any) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array: any[], comparator: any) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n}\n\nfunction getTotalHoursPerCategory(days: IDay[], category: string) {\n    let total = 0;\n    days.forEach((day: IDay) => {\n        total += Number(day[category]);\n    });\n    return total;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    small: {\n        fontSize: \"0.75rem\",\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function OverviewTable({ notification }: { notification: any }) {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\n    const [selected, setSelected] = React.useState<string[]>([]);\n    const [isLoading, setIsLoading] = React.useState(true);\n    const [rows, setRows] = React.useState<IHours[]>([]);\n\n    const currentYear = new Date().getFullYear();\n    const currentMonth = new Date().getMonth() + 1;\n\n    const handleChangeDate = (month: number, year: number) => {\n        getData(month, year);\n    };\n\n    const handleRequestSort = (event: any, property: string) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event: any) => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map((row: IHours) => row.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event: any, id: string) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected: string[] = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = (id: string) => selected.indexOf(id) !== -1;\n\n    const approve = () => {\n        const newRows = rows.map((item) => {\n            if (selected.includes(item.id)) {\n                return Object.assign({}, item, { approved: true });\n            }\n            return item;\n        });\n        setRows(newRows);\n        saveData();\n    };\n\n    const getData = async (month: number, year: number) => {\n        setIsLoading(true);\n        Hours.getHours(month, year)\n            .then((response) => {\n                const list = response.docs.map((doc) => {\n                    const row = doc.data();\n                    row.id = doc.id;\n                    return row;\n                });\n                setRows(\n                    list.map((row: any) => {\n                        initRow(row);\n                        return row;\n                    }),\n                );\n            })\n            .catch((error) => {\n                notification(\"Niet gelukt om uren op te halen: \" + error);\n            });\n        setIsLoading(false);\n    };\n\n    const saveData = async () => {\n        setIsLoading(true);\n        Hours.updateHourList(rows)\n            .then(() => {\n                setIsLoading(false);\n                notification(\"Opgeslagen\");\n            })\n            .catch((error) => {\n                notification(\"Niet gelukt om te bewaren: \" + error);\n            });\n    };\n\n    const initRow = (row: IHours) => {\n        Constants.columns.forEach((cell) => {\n            if (cell.numeric) {\n                row[cell.id] = getTotalHoursPerCategory(row.days, cell.id);\n            }\n        });\n    };\n\n    const getTotal = (column: IAdminOverviewColumn) => {\n        if (!column.numeric) {\n            return \"\";\n        }\n\n        const values = rows.map((x) => x[column.id]);\n        return values.reduce((total, currentValue) => {\n            return Number(total) + Number(currentValue);\n        });\n    };\n\n    React.useEffect(() => {\n        getData(currentMonth, currentYear);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentMonth, currentYear]);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <OverviewToolbar\n                    numSelected={selected.length}\n                    currentMonth={currentMonth}\n                    currentYear={currentYear}\n                    onChangeDate={handleChangeDate}\n                    approve={approve}\n                />\n\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size=\"small\"\n                        aria-label=\"enhanced table\"\n                    >\n                        <OverviewHeader\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        {isLoading || rows.length === 0 ? null : (\n                            <>\n                                <TableBody>\n                                    {stableSort(\n                                        rows,\n                                        getComparator(order, orderBy),\n                                    ).map((row, index) => {\n                                        const isItemSelected = isSelected(\n                                            row.id,\n                                        );\n                                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                                        return (\n                                            <TableRow\n                                                hover\n                                                onClick={(event) =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                role=\"checkbox\"\n                                                aria-checked={isItemSelected}\n                                                tabIndex={-1}\n                                                key={row.id}\n                                                selected={isItemSelected}\n                                            >\n                                                <TableCell\n                                                    padding=\"checkbox\"\n                                                    className={classes.small}\n                                                >\n                                                    <Checkbox\n                                                        checked={isItemSelected}\n                                                        inputProps={{\n                                                            \"aria-labelledby\": labelId,\n                                                        }}\n                                                    />\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    id={labelId}\n                                                    scope=\"row\"\n                                                    className={classes.small}\n                                                >\n                                                    <Link\n                                                        component={NavLink}\n                                                        color=\"secondary\"\n                                                        to={\n                                                            \"/admin/detail/\" +\n                                                            row.id\n                                                        }\n                                                    >\n                                                        {\n                                                            row.profile\n                                                                .displayName\n                                                        }\n                                                    </Link>\n                                                </TableCell>\n                                                <TableCell\n                                                    className={classes.small}\n                                                >\n                                                    {row.client}\n                                                </TableCell>\n                                                <TableCell\n                                                    className={classes.small}\n                                                >\n                                                    {row.project}\n                                                </TableCell>\n                                                <TableCell\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.approved ? (\n                                                        <DoneIcon\n                                                            color=\"primary\"\n                                                            fontSize=\"small\"\n                                                        />\n                                                    ) : null}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.worked}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.overtime}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.sick}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.holiday}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.publicHoliday}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.available}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.education}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.other}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.standBy}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    className={classes.small}\n                                                >\n                                                    {row.kilometers}\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                                <TableFooter>\n                                    <TableRow>\n                                        <TableCell padding=\"checkbox\"></TableCell>\n\n                                        {Constants.columns.map((column) => {\n                                            return (\n                                                <TableCell\n                                                    align=\"right\"\n                                                    key={\"footer-\" + column.id}\n                                                    padding={\n                                                        column.disablePadding\n                                                            ? \"none\"\n                                                            : \"default\"\n                                                    }\n                                                >\n                                                    {getTotal(column)}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                </TableFooter>\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { useParams, NavLink } from \"react-router-dom\";\nimport { Button, makeStyles, Toolbar, Typography } from \"@material-ui/core\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\n\nimport HoursGrid from \"../../hours/hours-grid/HoursGrid.component\";\nimport Utils from \"../../common/Utils\";\nimport Hours from \"../../firebase/data/Hours\";\n\nimport IHours from \"../../common/interfaces/IHours\";\n\nconst useStyles = makeStyles((theme) => ({\n    alert: {\n        color: \"red\",\n    },\n    label: {\n        fontWeight: \"bold\",\n        marginRight: theme.spacing(2),\n    },\n    spacingLeft: {\n        marginLeft: theme.spacing(2),\n    },\n    spacingRight: {\n        marginRight: theme.spacing(2),\n    },\n    right: {\n        marginLeft: \"auto\",\n        display: \"inline-flex\",\n        justifyContent: \"flex-end\",\n        alignItems: \"center\",\n    },\n}));\n\nexport default function AdminDetail({ notification }: { notification: any }) {\n    const { id } = useParams();\n    const [data, setData] = React.useState<IHours>({\n        profile: {\n            id: \"\",\n            isAdmin: false,\n            microsoftId: \"\",\n            displayName: \"\",\n            email: \"\",\n        },\n        id: \"\",\n        days: [],\n        approved: false,\n    });\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const classes = useStyles();\n\n    const fetchMonth = async (documentId: string) => {\n        setIsLoading(true);\n        Hours.getHoursWithId(documentId)\n            .then((response) => {\n                const data = response.data();\n                if (data) {\n                    setData({\n                        days: Utils.initDays(\n                            data.days,\n                            false,\n                            data.year,\n                            data.month,\n                        ),\n                        id: data.id,\n                        profile: data.profile,\n                        approved: data.approved,\n                    });\n                }\n            })\n            .catch((error) => {\n                notification(\"Niet gelukt om uren op te halen: \" + error);\n            });\n        setIsLoading(false);\n    };\n\n    const saveMonth = async (documentId: string, document: IHours) => {\n        setIsLoading(true);\n\n        Hours.updateHours(documentId, document)\n            .then(() => {\n                setIsLoading(false);\n                notification(\"Opgeslagen\");\n            })\n            .catch((error) => {\n                notification(\"Niet gelukt om te bewaren: \" + error);\n            });\n    };\n\n    const onApprove = () => {\n        const approved = !Boolean(data?.approved);\n        setData({ ...data, approved: approved });\n\n        const document = data;\n        document.approved = approved;\n\n        if (id) {\n            saveMonth(id, document);\n        }\n    };\n\n    React.useEffect(() => {\n        if (id) {\n            fetchMonth(id);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [id]);\n\n    return isLoading ? (\n        <></>\n    ) : (\n        <>\n            <Toolbar>\n                <Button\n                    color=\"primary\"\n                    component={NavLink}\n                    className={classes.spacingRight}\n                    startIcon={<ChevronLeftIcon />}\n                    to=\"/admin\"\n                >\n                    Terug\n                </Button>\n                <Typography className={classes.label}>Naam:</Typography>\n                <Typography className={classes.spacingRight}>\n                    {data.profile.displayName}\n                </Typography>\n                <Typography className={classes.label}>Klant:</Typography>\n                <Typography className={classes.spacingRight}>\n                    {data.client}\n                </Typography>\n                <Typography className={classes.label}>Project:</Typography>\n                <Typography className={classes.spacingRight}>\n                    {data.project}\n                </Typography>\n                <div className={classes.right}>\n                    {data.approved ? (\n                        <>\n                            <DoneIcon\n                                color=\"primary\"\n                                className={classes.spacingRight}\n                            />\n                            <Typography className={classes.spacingRight}>\n                                Akkoord\n                            </Typography>\n                            <Button\n                                variant=\"outlined\"\n                                startIcon={<UndoIcon />}\n                                onClick={onApprove}\n                            >\n                                Herstel\n                            </Button>\n                        </>\n                    ) : (\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<DoneIcon />}\n                            onClick={onApprove}\n                        >\n                            Akkoord\n                        </Button>\n                    )}\n                </div>\n            </Toolbar>\n            <HoursGrid\n                expandColumns={true}\n                days={data.days}\n                readOnly=\"true\"\n                handleChange=\"\"\n                save=\"\"\n            ></HoursGrid>\n        </>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CssBaseline, Snackbar, Typography } from \"@material-ui/core\";\n\nimport {\n    makeStyles,\n    ThemeProvider,\n    createMuiTheme,\n} from \"@material-ui/core/styles\";\n\nimport firebase from \"./firebase/firebase.component\";\n\nimport IProfile from \"./common/interfaces/IProfile\";\nimport IUser from \"./common/interfaces/IUser\";\n\nimport Header from \"./navigation/header.component\";\nimport HoursContainer from \"./hours/hours-container/HoursContainer.component\";\nimport PreLoad from \"./navigation/pre-load/preLoad.component\";\nimport Admin from \"./admin/Admin.component\";\nimport AdminDetail from \"./admin/detail/Detail.component\";\n\nrequire(\"dotenv\").config();\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: \"#67d518\",\n        },\n        secondary: {\n            main: \"#009CA6\",\n        },\n    },\n});\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    title: {\n        margin: theme.spacing(1, 1),\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    const [profile, setProfile] = React.useState<IProfile>({\n        displayName: \"\",\n        email: \"\",\n        id: \"\",\n        isAdmin: false,\n        microsoftId: \"\",\n    });\n    const [isLoading, setIsLoading] = React.useState<boolean>(true);\n    const [notificationMessage, setNotificationMessage] = React.useState(\"\");\n\n    const signIn = () => {\n        const provider = new firebase.auth.OAuthProvider(\"microsoft.com\");\n\n        provider.setCustomParameters({\n            tenant: \"45c0a280-6475-473d-a8ee-a5684b93879c\",\n        });\n\n        firebase.auth().signInWithRedirect(provider);\n    };\n\n    const notification = (message: string) => {\n        setNotificationMessage(message);\n    };\n\n    const closeNotification = (event: any, reason: string) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        setNotificationMessage(\"\");\n    };\n\n    const getAuth = () => {\n        firebase\n            .auth()\n            .getRedirectResult()\n            .then(function (result: any) {\n                if (result.user === null) {\n                    signIn();\n                    return;\n                }\n                fetchProfile(result.user);\n            })\n            .catch(function (error) {\n                notification(\"Het is niet gelukt om in te loggen: \" + error);\n            });\n    };\n\n    React.useEffect(() => {\n        getAuth();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const fetchProfile = async (user: IUser) => {\n        const db = firebase.firestore();\n        const snapshot = await db.collection(\"profile\").get();\n        const response = snapshot.docs.find((doc) => {\n            return doc.data().microsoftId === user.uid;\n        });\n\n        if (!response) {\n            createNewProfile(user);\n            return;\n        }\n\n        const data = response.data();\n        setProfile({\n            id: response.id,\n            isAdmin: Boolean(data.isAdmin),\n            displayName: data.displayName,\n            email: data.email,\n            microsoftId: data.microsoftId,\n        });\n        setIsLoading(false);\n    };\n\n    const createNewProfile = (user: IUser) => {\n        const db = firebase.firestore();\n        const newProfile = {\n            displayName: user.displayName,\n            microsoftId: user.uid,\n            email: user.email,\n        };\n        db.collection(\"profile\")\n            .add(newProfile)\n            .then((docRef) => {\n                fetchProfile(user);\n            })\n            .catch((error) => {\n                notification(\n                    \"Het is niet gelukt om een profiel op te halen: \" + error,\n                );\n            });\n    };\n\n    if (isLoading) return <PreLoad />;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                {isLoading ? (\n                    <PreLoad />\n                ) : (\n                    <Router>\n                        <CssBaseline />\n                        <Header profile={profile} />\n                        <Switch>\n                            <Route\n                                path=\"/\"\n                                exact\n                                component={() => (\n                                    <HoursContainer\n                                        profile={profile}\n                                        type=\"month\"\n                                        notification={notification}\n                                    />\n                                )}\n                            />\n                            <Route path=\"/template\">\n                                <TemplateHeader classes={classes} />\n                                <HoursContainer\n                                    type=\"template\"\n                                    profile={profile}\n                                    notification={notification}\n                                />\n                            </Route>\n                            {profile.isAdmin && (\n                                <>\n                                    <Route\n                                        path=\"/admin\"\n                                        exact\n                                        component={() => (\n                                            <Admin\n                                                notification={notification}\n                                            />\n                                        )}\n                                    />\n                                    <Route\n                                        path=\"/admin/detail/:id\"\n                                        component={() => (\n                                            <AdminDetail\n                                                notification={notification}\n                                            />\n                                        )}\n                                    />\n                                </>\n                            )}\n                        </Switch>\n                        <Snackbar\n                            open={notificationMessage !== \"\"}\n                            autoHideDuration={6000}\n                            onClose={closeNotification}\n                            message={notificationMessage}\n                            anchorOrigin={{\n                                vertical: \"bottom\",\n                                horizontal: \"right\",\n                            }}\n                        ></Snackbar>\n                    </Router>\n                )}\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-app.js\"></script>\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-analytics.js\"></script>\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-auth.js\"></script>\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-firestore.js\"></script>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nconst TemplateHeader = ({ classes }: { classes: any }) => (\n    <>\n        <Typography variant=\"body1\" className={classes.title}>\n            Maak hier een template voor je gemiddelde werkweek. Pas het template\n            toe op de hele urenstaat met een klik op de knop.\n        </Typography>\n\n        <Typography variant=\"body2\" className={classes.title}>\n            Uren die je al hebt ingevuld worden niet overschreven.\n        </Typography>\n    </>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}