{"version":3,"sources":["firebase/firebase.js","navigation/header.js","firebase/data/Hours.js","hours/hoursConstants.js","hours/HoursHeader.js","hours/HoursFooter.js","hours/HoursCell.js","hours/HoursTableHeader.js","hours/hoursGrid.js","hours/HoursContainer.js","navigation/preLoad.js","admin/overview/constants.js","admin/overview/overviewHeader.js","admin/overview/overviewToolbar.js","admin/admin.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","appBar","backgroundColor","menuButton","marginRight","spacing","highlight","darken","title","flexGrow","Header","profile","classes","className","root","AppBar","position","Toolbar","Typography","variant","Button","component","NavLink","color","to","exact","activeClassName","isAdmin","startIcon","displayName","month","year","db","firestore","collection","where","get","response","docs","map","doc","row","data","id","profileId","columns","description","enabled","months","years","formControl","HoursConstants","currentYear","Date","getFullYear","currentMonth","getMonth","HoursHeader","isTemplate","client","project","expandColumns","handleInputChange","applyTemplate","FormControl","InputLabel","Select","labelId","defaultValue","onChange","event","target","value","MenuItem","key","FormControlLabel","control","Switch","checked","label","onClick","ClientAndProject","TextField","style","marginLeft","HoursFooter","days","length","TableFooter","TableRow","TableCell","column","align","x","reduce","total","currentValue","Number","getTotal","HoursCell","handleChange","save","React","useState","setValue","useEffect","day","inputProps","textAlign","onBlur","daysInput","output","numberValue","isNaN","handleHoursInput","onKeyDown","closest","parentNode","index","Array","from","children","indexOf","keyCode","nextRow","nextSibling","querySelector","focus","prevRow","previousSibling","size","HoursTableHead","TableHead","HoursGrid","isNotWeekend","dayOfTheWeek","getRowClass","TableContainer","Paper","Table","stickyHeader","aria-label","TableBody","date","getDay","toDate","getDayOfTheWeek","scope","i","HoursContainer","state","snackbarOpen","isLoading","fetchMonth","a","setState","Hours","instance","getDaysInMonth","fetchTemplate","exists","getTemplateWeek","templateDays","mergedDays","sameDay","find","templateDay","Object","keys","forEach","item","name","includes","rows","push","worked","overtime","sick","holiday","publicHoliday","available","education","other","standBy","kilometers","explanation","submitHours","set","then","docRef","prevState","catch","error","console","submitTemplate","props","handleClose","reason","this","type","daysInAMonth","getDate","noValidate","autoComplete","setMonth","Snackbar","anchorOrigin","vertical","horizontal","onClose","open","autoHideDuration","message","Component","height","minHeight","width","background","paper","marginTop","display","flexDirection","alignItems","avatar","margin","PreLoad","Container","maxWidth","CssBaseline","Avatar","src","alt","numeric","disablePadding","OverviewHeader","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","padding","Checkbox","indeterminate","Constants","headCell","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","paddingRight","palette","secondary","main","lighten","light","text","primary","dark","flex","OverviewToolbar","onChangeDate","setYear","clsx","Tooltip","IconButton","descendingComparator","b","marginBottom","table","minWidth","border","clip","overflow","top","OverviewTable","setOrder","setOrderBy","selected","setSelected","setIsLoading","getData","list","initRow","cell","category","getTotalHoursPerCategory","aria-labelledby","newSelecteds","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","isItemSelected","hover","selectedIndex","newSelected","concat","slice","handleClick","role","aria-checked","tabIndex","createMuiTheme","activeItem","hide","toolbar","justifyContent","mixins","content","TemplateHeader","Boolean","window","location","hostname","match","ReactDOM","render","setProfile","getAuth","auth","getRedirectResult","result","user","fetchProfile","provider","OAuthProvider","setCustomParameters","tenant","signInWithRedirect","signIn","log","snapshot","microsoftId","uid","createNewProfile","newProfile","email","add","ThemeProvider","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.935992ec.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAkvaF-lqt8ZxyBwcNlwrHhj-Pp3Ev54pI\",\n    authDomain: \"codezilla-hours.firebaseapp.com\",\n    databaseURL: \"https://codezilla-hours.firebaseio.com\",\n    projectId: \"codezilla-hours\",\n    storageBucket: \"codezilla-hours.appspot.com\",\n    messagingSenderId: \"634823174203\",\n    appId: \"1:634823174203:web:ca40af276111cfae66541e\",\n    measurementId: \"G-DR0KK33WCW\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport { makeStyles, darken } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles(theme => ({\n    appBar: {\n        backgroundColor: \"#7d518\",\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    highlight: {\n        backgroundColor: darken(\"rgba(103, 213, 24)\", 0.1),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header({ profile }) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" className={classes.appBar}>\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        CODEZILLA Hours\n                    </Typography>\n                    <Button\n                        component={NavLink}\n                        color=\"inherit\"\n                        to=\"/\"\n                        exact\n                        activeClassName={classes.highlight}\n                    >\n                        Urenstaat\n                    </Button>\n                    <Button\n                        component={NavLink}\n                        color=\"inherit\"\n                        to=\"/template\"\n                        activeClassName={classes.highlight}\n                    >\n                        Template\n                    </Button>\n                    {profile.isAdmin && (\n                        <Button\n                            component={NavLink}\n                            color=\"inherit\"\n                            to=\"/admin\"\n                            activeClassName={classes.highlight}\n                        >\n                            Beheer\n                        </Button>\n                    )}\n                    <Button color=\"inherit\" startIcon={<AccountCircle />}>\n                        {profile.displayName}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import firebase from \"../firebase\";\n\nexport default {\n    async getHours(month, year) {\n        const db = firebase.firestore();\n        const response = await db\n            .collection(\"months\")\n            .where(\"month\", \"==\", month)\n            .where(\"year\", \"==\", year)\n            .get();\n        return response.docs.map(doc => {\n            const row = doc.data();\n            row.id = doc.id;\n            return row;\n        });\n    },\n    async getHoursForProfile(month, year, profileId) {\n        const db = firebase.firestore();\n        const response = await db\n            .collection(\"months\")\n            .where(\"month\", \"==\", month)\n            .where(\"year\", \"==\", year)\n            .where(\"profileId\", \"==\", profileId)\n            .get();\n        return response.docs.map(doc => {\n            const row = doc.data();\n            row.id = doc.id;\n            return row;\n        });\n    },\n};\n","export const columns = [\n    {\n        id: \"worked\",\n        description: \"Gewerkt\",\n        enabled: true\n    },\n    {\n        id: \"overtime\",\n        description: \"Overwerk\",\n        enabled: true\n    },\n    {\n        id: \"sick\",\n        description: \"Ziek\",\n        enabled: true\n    },\n    {\n        id: \"holiday\",\n        description: \"Verlof\",\n        enabled: true\n    },\n    {\n        id: \"publicHoliday\",\n        description: \"Feestdag\",\n        enabled: true\n    },\n    {\n        id: \"available\",\n        description: \"Beschikbaar\",\n        enabled: false\n    },\n    {\n        id: \"education\",\n        description: \"Opleiding\",\n        enabled: false\n    },\n    {\n        id: \"other\",\n        description: \"Overig\",\n        enabled: false\n    },\n    {\n        id: \"standBy\",\n        description: \"StandBy\",\n        enabled: false\n    },\n    {\n        id: \"kilometers\",\n        description: \"Kilometers\",\n        enabled: false\n    }\n];\n\nexport const months = [\n    {\n        id: 1,\n        description: \"Januari\"\n    },\n    {\n        id: 2,\n        description: \"Februari\"\n    },\n    {\n        id: 3,\n        description: \"Maart\"\n    },\n    {\n        id: 4,\n        description: \"April\"\n    },\n    {\n        id: 5,\n        description: \"Mei\"\n    },\n    {\n        id: 6,\n        description: \"Juni\"\n    },\n    {\n        id: 7,\n        description: \"Juli\"\n    },\n    {\n        id: 8,\n        description: \"Augustus\"\n    },\n    {\n        id: 9,\n        description: \"September\"\n    },\n    {\n        id: 10,\n        description: \"Oktober\"\n    },\n    {\n        id: 11,\n        description: \"November\"\n    },\n    {\n        id: 12,\n        description: \"December\"\n    }\n];\n\nexport const years = [2020, 2021, 2022, 2023, 2025];\n","import React from \"react\";\nimport {\n    Toolbar,\n    FormControl,\n    FormControlLabel,\n    InputLabel,\n    MenuItem,\n    Select,\n    Switch,\n    TextField,\n    Button,\n    makeStyles,\n} from \"@material-ui/core\";\n\nimport * as HoursConstants from \"./hoursConstants\";\n\nconst useStyles = makeStyles(theme => ({\n    formControl: {\n        marginRight: theme.spacing(1),\n    },\n}));\n\nconst months = HoursConstants.months;\nconst years = HoursConstants.years;\nconst currentYear = new Date().getFullYear();\nconst currentMonth = new Date().getMonth() + 1;\n\nconst HoursHeader = ({\n    isTemplate,\n    client,\n    project,\n    expandColumns,\n    handleInputChange,\n    applyTemplate,\n}) => {\n    const classes = useStyles();\n\n    if (isTemplate)\n        return (\n            <ClientAndProject\n                classes={classes}\n                client={client}\n                project={project}\n                handleInputChange={handleInputChange}\n            />\n        );\n    return (\n        <Toolbar>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"select-month-label\">Maand</InputLabel>\n                <Select\n                    labelId=\"select-month-label\"\n                    id=\"select-month-label\"\n                    defaultValue={currentMonth}\n                    onChange={event =>\n                        handleInputChange(\"month\", event.target.value)\n                    }\n                >\n                    {months.map(month => {\n                        return (\n                            <MenuItem value={month.id} key={month.id}>\n                                {month.description}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"select-year-label\">Jaar</InputLabel>\n                <Select\n                    labelId=\"select-year-label\"\n                    id=\"select-year-label\"\n                    defaultValue={currentYear}\n                    onChange={event =>\n                        handleInputChange(\"year\", event.target.value)\n                    }\n                >\n                    {years.map(year => {\n                        return (\n                            <MenuItem value={year} key={year}>\n                                {year}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n            <ClientAndProject\n                classes={classes}\n                client={client}\n                project={project}\n                handleInputChange={handleInputChange}\n            />\n            <FormControlLabel\n                className={classes.formControl}\n                control={\n                    <Switch\n                        checked={expandColumns}\n                        onChange={event =>\n                            handleInputChange(\n                                \"expandColumns\",\n                                event.target.checked,\n                            )\n                        }\n                        color=\"primary\"\n                    />\n                }\n                label=\"Toon alle velden\"\n            />\n            <Button\n                className={classes.formControl}\n                variant=\"contained\"\n                onClick={applyTemplate}\n            >\n                {\"Gebruik Template\"}\n            </Button>\n        </Toolbar>\n    );\n};\n\nexport default HoursHeader;\n\nconst ClientAndProject = ({ classes, client, project, handleInputChange }) => (\n    <>\n        <TextField\n            style={{ marginLeft: \"8px\" }}\n            className={classes.formControl}\n            id=\"client\"\n            label=\"Klant\"\n            value={client}\n            onChange={event => handleInputChange(\"client\", event.target.value)}\n        />\n        <TextField\n            className={classes.formControl}\n            id=\"project\"\n            label=\"Project\"\n            value={project}\n            onChange={event => handleInputChange(\"project\", event.target.value)}\n        />\n    </>\n);\n","import React from \"react\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\nimport * as HoursConstants from \"./hoursConstants\";\n\nconst columns = HoursConstants.columns;\n\nconst HoursFooter = ({ expandColumns, days }) => {\n    const getTotal = column => {\n        const values = days.map(x => x[column]);\n        return values.reduce((total, currentValue) => {\n            return Number(total) + Number(currentValue);\n        });\n    };\n\n    if (!days.length) return null;\n\n    return (\n        <TableFooter>\n            <TableRow>\n                <TableCell> Totaal</TableCell>\n                {columns.map(column => {\n                    if (!column.enabled && !expandColumns) {\n                        return null;\n                    }\n                    return (\n                        <TableCell align=\"right\" key={\"footer-\" + column.id}>\n                            {getTotal(column.id)}\n                        </TableCell>\n                    );\n                })}\n                <TableCell align=\"right\"></TableCell>\n            </TableRow>\n        </TableFooter>\n    );\n};\n\nexport default HoursFooter;\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst HoursCell = ({ row, column, days, handleChange, save }) => {\n    const [value, setValue] = React.useState(row[column]);\n\n    React.useEffect(() => {\n        setValue(row[column]);\n    }, [row, column]);\n\n    const handleHoursInput = (value, column, day) => {\n        const daysInput = [...days];\n        let output = \"\";\n        if (value !== \"\") {\n            const numberValue = Number(value);\n            output = isNaN(numberValue) ? \"\" : numberValue;\n        }\n        daysInput[day][column] = output;\n        setValue(output);\n        handleChange(\"days\", daysInput);\n        save();\n    };\n\n    /* Jump with arrow keys to another field */\n    const onKeyDown = event => {\n        const column = event.target.closest(\"td\");\n        const row = column.parentNode;\n        const index = Array.from(row.children).indexOf(column);\n\n        switch (event.keyCode) {\n            case 40:\n                /* arrow key down */\n                const nextRow = row.nextSibling;\n                if (nextRow !== null) {\n                    nextRow.children[index].querySelector(\"input\").focus();\n                }\n                break;\n            case 38:\n                /* arrow key up */\n                const prevRow = row.previousSibling;\n                if (prevRow !== null) {\n                    prevRow.children[index].querySelector(\"input\").focus();\n                }\n                break;\n            default:\n                break;\n        }\n    };\n\n    if (!row) return null;\n\n    return (\n        <TableCell align=\"left\" key={row.day + \"-\" + column}>\n            <TextField\n                id={column}\n                inputProps={{\n                    style: {\n                        textAlign: \"left\",\n                    },\n                    day: row.day,\n                }}\n                value={value}\n                onChange={event => setValue(event.target.value)}\n                onBlur={event =>\n                    handleHoursInput(event.target.value, column, row.day - 1)\n                }\n                onKeyDown={onKeyDown}\n                size=\"small\"\n            />\n        </TableCell>\n    );\n};\n\nexport default HoursCell;\n","import React from \"react\";\nimport { TableHead, TableRow, TableCell } from \"@material-ui/core\";\nimport { columns } from \"./hoursConstants\";\n\nconst HoursTableHead = ({ expandColumns }) => {\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell></TableCell>\n                {columns.map(column => {\n                    if (!column.enabled && !expandColumns) {\n                        return null;\n                    }\n                    return (\n                        <TableCell align=\"right\" key={\"header-\" + column.id}>\n                            {column.description}\n                        </TableCell>\n                    );\n                })}\n                <TableCell align=\"right\">Toelichting</TableCell>\n            </TableRow>\n        </TableHead>\n    );\n};\n\nexport default HoursTableHead;\n","import React from \"react\";\nimport {\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableRow,\n    TextField,\n    Paper,\n} from \"@material-ui/core\";\n\nimport * as HoursConstants from \"./hoursConstants\";\nimport HoursFooter from \"./HoursFooter\";\nimport HoursCell from \"./HoursCell\";\nimport HoursTableHead from \"./HoursTableHeader\";\n\nconst columns = HoursConstants.columns;\n\nconst HoursGrid = ({ expandColumns, days, handleChange, save, isTemplate }) => {\n    const isNotWeekend = dayOfTheWeek => {\n        return dayOfTheWeek !== 0 && dayOfTheWeek !== 6;\n    };\n\n    const getRowClass = dayOfTheWeek => {\n        return isNotWeekend(dayOfTheWeek) ? \"\" : \"highlight\";\n    };\n\n    const getDayOfTheWeek = row => {\n        if (isTemplate) {\n            return row.day - 1;\n        }\n        if (row.date instanceof Date) {\n            /* row.date is valid date object */\n            return new Date(row.date).getDay();\n        }\n        if (row.date.toDate() instanceof Date) {\n            /* row.date is a timestamp */\n            return new Date(row.date.toDate()).getDay();\n        }\n        /* No valid date, return -1 */\n        return -1;\n    };\n\n    return (\n        <TableContainer component={Paper} className=\"hoursGrid\">\n            <Table stickyHeader size=\"small\" aria-label=\"simple table\">\n                <HoursTableHead expandColumns={expandColumns} />\n                <TableBody>\n                    {days.map(row => {\n                        const dayOfTheWeek = getDayOfTheWeek(row);\n                        return (\n                            <TableRow\n                                key={row.day}\n                                className={getRowClass(dayOfTheWeek)}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.day}\n                                </TableCell>\n                                {columns.map((column, i) => {\n                                    if (!column.enabled && !expandColumns) {\n                                        return null;\n                                    }\n                                    return (\n                                        <HoursCell\n                                            key={`${column.id}-${i}`}\n                                            row={row}\n                                            column={column.id}\n                                            handleChange={handleChange}\n                                            save={save}\n                                            days={days}\n                                        />\n                                    );\n                                })}\n                                <TableCell align=\"right\">\n                                    {isNotWeekend(row.dayOfTheWeek) ? (\n                                        <TextField\n                                            id=\"explanation\"\n                                            inputProps={{\n                                                day: row.day,\n                                            }}\n                                            onBlur={event =>\n                                                handleChange(\n                                                    event.target.value,\n                                                    \"explanation\",\n                                                    row.day,\n                                                )\n                                            }\n                                        />\n                                    ) : null}\n                                </TableCell>\n                            </TableRow>\n                        );\n                    })}\n                </TableBody>\n                <HoursFooter expandColumns={expandColumns} days={days} />\n            </Table>\n        </TableContainer>\n    );\n};\n\nexport default HoursGrid;\n","import React, { Component } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport firebase from \"../firebase/firebase\";\nimport Hours from \"../firebase/data/Hours\";\n\nimport HoursHeader from \"./HoursHeader\";\nimport HoursGrid from \"./hoursGrid\";\n\nclass HoursContainer extends Component {\n    state = {\n        id: \"\",\n        days: [],\n        month: \"\",\n        year: \"\",\n        expandColumns: true,\n        client: \"\",\n        project: \"\",\n        profileId: \"\",\n        profile: \"\",\n        snackbarOpen: false,\n        isLoading: false,\n        isTemplate: false,\n    };\n\n    componentDidMount() {\n        const year = new Date().getFullYear();\n        const month = new Date().getMonth() + 1;\n        const { type, profile } = this.props;\n        const isTemplate = type === \"template\";\n\n        this.setState(\n            {\n                isTemplate,\n                profile,\n                profileId: profile.id,\n                year,\n                month,\n            },\n            () => {\n                if (isTemplate) {\n                    this.fetchTemplate(profile.id);\n                } else {\n                    this.fetchMonth();\n                }\n            },\n        );\n    }\n\n    fetchMonth = async () => {\n        this.setState({ isLoading: true });\n        const instance = await Hours.getHoursForProfile(\n            this.state.month,\n            this.state.year,\n            this.state.profileId,\n        );\n\n        if (instance.length === 1) {\n            this.setState({ ...instance[0], id: instance[0].id });\n        } else {\n            this.setState({\n                days: this.getDaysInMonth(this.state.month, this.state.year),\n            });\n        }\n\n        this.setState({ isLoading: false });\n    };\n\n    fetchTemplate = async profileId => {\n        this.setState({ isLoading: true });\n\n        const db = firebase.firestore();\n        const instance = await db\n            .collection(\"template\")\n            .doc(profileId)\n            .get();\n\n        if (instance && instance.exists && instance.data().days) {\n            this.setState({\n                days: instance.data().days,\n                client: instance.data().client,\n                project: instance.data().project,\n                id: instance.id,\n            });\n        } else {\n            this.getTemplateWeek();\n        }\n\n        this.setState({ isLoading: false });\n    };\n\n    applyTemplate = async () => {\n        this.setState({ isLoading: true });\n\n        const db = firebase.firestore();\n        const instance = await db\n            .collection(\"template\")\n            .doc(this.state.profileId)\n            .get();\n\n        const templateDays = await instance.data().days;\n        const { days } = this.state;\n\n        const mergedDays = days.map(day => {\n            const sameDay = templateDays.find(templateDay => {\n                const monthDayOfTheWeek = new Date(day.date.toDate()).getDay();\n\n                return monthDayOfTheWeek === templateDay.day - 1;\n            });\n\n            if (day !== sameDay) {\n                Object.keys(day).forEach(item => {\n                    if (day[item] === \"\") {\n                        day[item] = sameDay[item];\n                    }\n                });\n            }\n\n            return day;\n        });\n        this.setState(\n            {\n                isLoading: false,\n                days: mergedDays,\n                client: instance.data().client,\n                project: instance.data().project,\n            },\n            this.save(),\n        );\n    };\n\n    handleInputChange = (name, value) => {\n        this.setState({ [name]: value }, () => {\n            if ([\"month\", \"year\"].includes(name)) {\n                this.fetchMonth();\n            }\n        });\n    };\n\n    getTemplateWeek = () => {\n        const rows = [];\n\n        for (let i = 1; i <= 7; i++) {\n            rows.push({\n                day: i,\n                date: i - 1,\n                worked: \"\",\n                overtime: \"\",\n                sick: \"\",\n                holiday: \"\",\n                publicHoliday: \"\",\n                available: \"\",\n                education: \"\",\n                other: \"\",\n                standBy: \"\",\n                kilometers: \"\",\n                explanation: \"\",\n            });\n        }\n\n        return this.setState({ days: rows });\n    };\n\n    getDaysInMonth(month, year) {\n        const daysInAMonth = new Date(year, month, 0).getDate();\n\n        const rows = [];\n\n        for (let i = 1; i <= daysInAMonth; i++) {\n            rows.push({\n                day: i,\n                date: new Date(year, month - 1, i),\n                worked: \"\",\n                overtime: \"\",\n                sick: \"\",\n                holiday: \"\",\n                publicHoliday: \"\",\n                available: \"\",\n                education: \"\",\n                other: \"\",\n                standBy: \"\",\n                kilometers: \"\",\n                explanation: \"\",\n            });\n        }\n\n        return rows;\n    }\n\n    submitHours = () => {\n        const db = firebase.firestore();\n        db.collection(\"months\")\n            .doc(\n                this.state.year +\n                    \"-\" +\n                    this.state.month +\n                    \"-\" +\n                    this.state.profile.displayName,\n            )\n            .set({\n                client: this.state.client,\n                days: this.state.days,\n                profile: this.state.profile,\n                profileId: this.state.profileId,\n                project: this.state.project,\n                year: this.state.year,\n                month: this.state.month,\n            })\n            .then(docRef => {\n                this.setState(prevState => {\n                    prevState.snackbarOpen = true;\n                    return prevState;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    submitTemplate = (days, client, project) => {\n        const data = days.map(day => {\n            delete day.date;\n            delete day.dayOfTheWeek;\n            return day;\n        });\n\n        const db = firebase.firestore();\n        db.collection(\"template\")\n            .doc(this.props.profile.id)\n            .set({ days: data, client, project })\n            .then(docRef => {\n                this.setState(prevState => {\n                    prevState.snackbarOpen = true;\n                    return prevState;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    save = () => {\n        if (this.isTemplate) {\n            const { days, client, project } = this.state;\n            this.submitTemplate(days, client, project);\n            return;\n        }\n        this.submitHours();\n    };\n\n    handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        this.setState(prevState => {\n            prevState.snackbarOpen = false;\n            return prevState;\n        });\n    };\n\n    render() {\n        if (!this.props.profile.id) return null;\n\n        return (\n            <form noValidate autoComplete=\"off\">\n                <HoursHeader\n                    setMonth={this.setMonth}\n                    handleInputChange={this.handleInputChange}\n                    client={this.state.client}\n                    project={this.state.project}\n                    expandColumns={this.state.expandColumns}\n                    isTemplate={this.state.isTemplate}\n                    applyTemplate={this.applyTemplate}\n                />\n                <HoursGrid\n                    expandColumns={this.state.expandColumns}\n                    days={this.state.days}\n                    handleChange={this.handleInputChange}\n                    save={this.save}\n                    isTemplate={this.state.isTemplate}\n                />\n\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"right\",\n                    }}\n                    onClose={this.handleClose}\n                    open={this.state.snackbarOpen}\n                    autoHideDuration={4000}\n                    message=\"Opgeslagen\"\n                />\n            </form>\n        );\n    }\n}\n\nexport default HoursContainer;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"100%\",\n        minHeight: \"100%\",\n        width: \"100%\",\n        position: \"fixed\",\n        background: \"url('./bg-pattern-triangles.png') 0 0 repeat\",\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: \"transparent\",\n    },\n}));\n\nexport default function PreLoad() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <img\n                        src=\"./Icon-green.svg\"\n                        alt=\"CODEZILLA logo\"\n                        height=\"100%\"\n                        width=\"100%\"\n                    ></img>\n                </Avatar>\n                <Typography id=\"preloadTitle\" component=\"h1\" variant=\"h4\">\n                    CODEZILLA Hours\n                </Typography>\n                <Typography\n                    id=\"preloadSubTitle\"\n                    component=\"h2\"\n                    variant=\"subtitle1\"\n                >\n                    Bezig met aanmelden...\n                </Typography>\n            </div>\n        </Container>\n    );\n}\n","export const columns = [\n    {\n        id: \"name\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Naam\",\n    },\n    {\n        id: \"client\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Klant\",\n    },\n    {\n        id: \"project\",\n        numeric: false,\n        disablePadding: false,\n        label: \"Project\",\n    },\n    {\n        id: \"worked\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Gewerkt\",\n    },\n    {\n        id: \"overtime\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Overwerk\",\n    },\n    {\n        id: \"sick\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Ziek\",\n    },\n    {\n        id: \"holiday\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Verlof\",\n    },\n    {\n        id: \"publicHoliday\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Feestdag\",\n    },\n    {\n        id: \"available\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Beschikb.\",\n    },\n    {\n        id: \"education\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Opl.\",\n    },\n    {\n        id: \"other\",\n        numeric: true,\n        disablePadding: true,\n        label: \"Overig\",\n    },\n    {\n        id: \"standBy\",\n        numeric: true,\n        disablePadding: true,\n        label: \"stand-by\",\n    },\n    {\n        id: \"kilometers\",\n        numeric: true,\n        disablePadding: false,\n        label: \"Km\",\n    },\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n    Checkbox,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableSortLabel,\n} from \"@material-ui/core/\";\n\nimport * as Constants from \"./constants\";\n\nOverviewHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nexport default function OverviewHeader(props) {\n    const {\n        classes,\n        onSelectAllClick,\n        order,\n        orderBy,\n        numSelected,\n        rowCount,\n        onRequestSort,\n    } = props;\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={\n                            numSelected > 0 && numSelected < rowCount\n                        }\n                        checked={rowCount > 0 && numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ \"aria-label\": \"select all desserts\" }}\n                    />\n                </TableCell>\n                {Constants.columns.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        align={headCell.numeric ? \"right\" : \"left\"}\n                        padding={headCell.disablePadding ? \"none\" : \"default\"}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={orderBy === headCell.id ? order : \"asc\"}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === \"desc\"\n                                        ? \"sorted descending\"\n                                        : \"sorted ascending\"}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n","import React from \"react\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n    IconButton,\n    Tooltip,\n    MenuItem,\n    Select,\n    InputLabel,\n    FormControl,\n    Typography,\n    Toolbar,\n} from \"@material-ui/core/\";\n\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nimport * as HoursConstants from \"../../hours/hoursConstants\";\n\nOverviewToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n    currentMonth: PropTypes.number.isRequired,\n    currentYear: PropTypes.number.isRequired,\n    onChangeDate: PropTypes.func.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        paddingRight: theme.spacing(1),\n    },\n    formControl: {\n        marginLeft: theme.spacing(2),\n    },\n    highlight:\n        theme.palette.type === \"light\"\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    title: {\n        flex: \"1\",\n    },\n}));\n\nexport default function OverviewToolbar(props) {\n    const classes = useStyles();\n    const { numSelected, currentMonth, currentYear, onChangeDate } = props;\n    const [month, setMonth] = React.useState(currentMonth);\n    const [year, setYear] = React.useState(currentYear);\n\n    const onChangeMonth = value => {\n        setMonth(value);\n        onChangeDate(value, year);\n    };\n\n    const onChangeYear = value => {\n        setYear(value);\n        onChangeDate(month, value);\n    };\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography\n                    className={classes.title}\n                    color=\"inherit\"\n                    variant=\"subtitle1\"\n                >\n                    {numSelected} geselecteerd\n                </Typography>\n            ) : (\n                <Typography\n                    className={classes.title}\n                    variant=\"h6\"\n                    id=\"tableTitle\"\n                >\n                    Beheer\n                </Typography>\n            )}\n\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"select-month-label\">Maand</InputLabel>\n                <Select\n                    labelId=\"select-month-label\"\n                    id=\"select-month-label\"\n                    value={month}\n                    onChange={event => onChangeMonth(event.target.value)}\n                >\n                    {HoursConstants.months.map(month => {\n                        return (\n                            <MenuItem value={month.id} key={month.id}>\n                                {month.description}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"select-year-label\">Jaar</InputLabel>\n                <Select\n                    labelId=\"select-year-label\"\n                    id=\"select-year-label\"\n                    value={year}\n                    onChange={event => onChangeYear(event.target.value)}\n                >\n                    {HoursConstants.years.map(year => {\n                        return (\n                            <MenuItem value={year} key={year}>\n                                {year}\n                            </MenuItem>\n                        );\n                    })}\n                </Select>\n            </FormControl>\n\n            {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                <Tooltip title=\"Filter list\">\n                    <IconButton aria-label=\"filter list\">\n                        <FilterListIcon />\n                    </IconButton>\n                </Tooltip>\n            )}\n        </Toolbar>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n    Checkbox,\n    Paper,\n    Table,\n    TableContainer,\n    TableBody,\n    TableRow,\n    TableCell,\n    TableFooter,\n} from \"@material-ui/core/\";\n\nimport Hours from \"../firebase/data/Hours\";\n\nimport * as Constants from \"./overview/constants\";\n\nimport OverviewHeader from \"./overview/overviewHeader\";\nimport OverviewToolbar from \"./overview/overviewToolbar\";\n\nlet rows = [];\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === \"desc\"\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getTotalHoursPerCategory(days, category) {\n    let total = 0;\n    days.forEach(day => {\n        total += Number(day[category]);\n    });\n    return total;\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: \"100%\",\n    },\n    paper: {\n        width: \"100%\",\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function OverviewTable() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState(\"asc\");\n    const [orderBy, setOrderBy] = React.useState(\"calories\");\n    const [selected, setSelected] = React.useState([]);\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const currentYear = new Date().getFullYear();\n    const currentMonth = new Date().getMonth() + 1;\n\n    const handleChangeDate = (month, year) => {\n        getData(month, year);\n    };\n\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === \"asc\";\n        setOrder(isAsc ? \"desc\" : \"asc\");\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map(row => row.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, id) => {\n        const selectedIndex = selected.indexOf(id);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, id);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    const getData = async (month, year) => {\n        setIsLoading(true);\n        const list = await Hours.getHours(month, year);\n        rows = list.map(row => {\n            initRow(row);\n            return row;\n        });\n        setIsLoading(false);\n    };\n\n    const initRow = row => {\n        Constants.columns.forEach(cell => {\n            if (cell.numeric) {\n                row[cell.id] = getTotalHoursPerCategory(row.days, cell.id);\n            }\n        });\n    };\n\n    const getTotal = column => {\n        if (!column.numeric) {\n            return \"\";\n        }\n\n        const values = rows.map(x => x[column.id]);\n        return values.reduce((total, currentValue) => {\n            return Number(total) + Number(currentValue);\n        });\n    };\n\n    React.useEffect(() => {\n        getData(currentMonth, currentYear);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentMonth, currentYear]);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <OverviewToolbar\n                    numSelected={selected.length}\n                    currentMonth={currentMonth}\n                    currentYear={currentYear}\n                    onChangeDate={handleChangeDate}\n                />\n\n                <TableContainer>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size=\"small\"\n                        aria-label=\"enhanced table\"\n                    >\n                        <OverviewHeader\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        {isLoading || rows.length === 0 ? null : (\n                            <>\n                                <TableBody>\n                                    {stableSort(\n                                        rows,\n                                        getComparator(order, orderBy),\n                                    ).map((row, index) => {\n                                        const isItemSelected = isSelected(\n                                            row.id,\n                                        );\n                                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                                        return (\n                                            <TableRow\n                                                hover\n                                                onClick={event =>\n                                                    handleClick(event, row.id)\n                                                }\n                                                role=\"checkbox\"\n                                                aria-checked={isItemSelected}\n                                                tabIndex={-1}\n                                                key={row.id}\n                                                selected={isItemSelected}\n                                            >\n                                                <TableCell padding=\"checkbox\">\n                                                    <Checkbox\n                                                        checked={isItemSelected}\n                                                        inputProps={{\n                                                            \"aria-labelledby\": labelId,\n                                                        }}\n                                                    />\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    id={labelId}\n                                                    scope=\"row\"\n                                                >\n                                                    {row.profile.displayName}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.client}\n                                                </TableCell>\n                                                <TableCell>\n                                                    {row.project}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.worked}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.overtime}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.sick}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.holiday}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.publicHoliday}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.available}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.education}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.other}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    padding=\"none\"\n                                                >\n                                                    {row.standBy}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.kilometers}\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                                <TableFooter>\n                                    <TableRow>\n                                        <TableCell padding=\"checkbox\"></TableCell>\n\n                                        {Constants.columns.map(column => {\n                                            return (\n                                                <TableCell\n                                                    align=\"right\"\n                                                    key={\"footer-\" + column.id}\n                                                    padding={\n                                                        column.disablePadding\n                                                            ? \"none\"\n                                                            : \"default\"\n                                                    }\n                                                >\n                                                    {getTotal(column)}\n                                                </TableCell>\n                                            );\n                                        })}\n                                    </TableRow>\n                                </TableFooter>\n                            </>\n                        )}\n                    </Table>\n                </TableContainer>\n            </Paper>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Typography } from \"@material-ui/core\";\n\nimport {\n    makeStyles,\n    ThemeProvider,\n    createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport firebase from \"./firebase/firebase\";\n\nimport Header from \"./navigation/header\";\nimport HoursContainer from \"./hours/HoursContainer\";\nimport PreLoad from \"./navigation/preLoad\";\nimport Admin from \"./admin/admin\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            // light: will be calculated from palette.primary.main,\n            main: \"#67d518\",\n            // dark: will be calculated from palette.primary.main,\n            // contrastText: will be calculated to contrast with palette.primary.main\n        },\n    },\n});\n\nconst useStyles = makeStyles(theme => ({\n    activeItem: {\n        backgroundColor: theme.palette.primary[100],\n    },\n    item: {},\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: \"none\",\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n    },\n    title: {\n        margin: theme.spacing(1, 1),\n    },\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    const [profile, setProfile] = React.useState({});\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const signIn = () => {\n        const provider = new firebase.auth.OAuthProvider(\"microsoft.com\");\n\n        provider.setCustomParameters({\n            tenant: \"45c0a280-6475-473d-a8ee-a5684b93879c\",\n        });\n\n        firebase.auth().signInWithRedirect(provider);\n    };\n\n    const getAuth = () => {\n        firebase\n            .auth()\n            .getRedirectResult()\n            .then(function(result) {\n                if (result.user === null) {\n                    signIn();\n                    return;\n                }\n                fetchProfile(result.user);\n            })\n            .catch(function(error) {\n                console.log(error);\n            });\n    };\n\n    React.useEffect(() => {\n        getAuth();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const fetchProfile = async user => {\n        const db = firebase.firestore();\n        const snapshot = await db.collection(\"profile\").get();\n        const response = snapshot.docs.find(doc => {\n            return doc.data().microsoftId === user.uid;\n        });\n\n        if (!response) {\n            createNewProfile(user);\n            return;\n        }\n\n        const data = response.data();\n        data.id = response.id;\n        setProfile(data);\n        setIsLoading(false);\n    };\n\n    const createNewProfile = user => {\n        const db = firebase.firestore();\n        const newProfile = {\n            displayName: user.displayName,\n            microsoftId: user.uid,\n            email: user.email,\n        };\n        db.collection(\"profile\")\n            .add(newProfile)\n            .then(docRef => {\n                fetchProfile(user);\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    };\n\n    if (isLoading) return <PreLoad />;\n\n    return (\n        <ThemeProvider theme={theme}>\n            <div className={classes.root}>\n                {isLoading ? (\n                    <PreLoad />\n                ) : (\n                    <Router>\n                        <CssBaseline />\n                        <Header profile={profile} />\n                        <Switch>\n                            <Route\n                                path=\"/\"\n                                exact\n                                component={() => (\n                                    <HoursContainer\n                                        profile={profile}\n                                        type=\"month\"\n                                    />\n                                )}\n                            />\n                            <Route path=\"/template\">\n                                <TemplateHeader classes={classes} />\n                                <HoursContainer\n                                    type=\"template\"\n                                    profile={profile}\n                                />\n                            </Route>\n                            {profile.isAdmin && (\n                                <Route\n                                    path=\"/admin\"\n                                    component={() => (\n                                        <Admin profile={profile} />\n                                    )}\n                                />\n                            )}\n                        </Switch>\n                    </Router>\n                )}\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-app.js\"></script>\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-analytics.js\"></script>\n\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-auth.js\"></script>\n                <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-firestore.js\"></script>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nconst TemplateHeader = ({ classes }) => (\n    <>\n        <Typography variant=\"body1\" className={classes.title}>\n            Maak hier een template voor je gemiddelde werkweek. Pas het template\n            toe op de hele urenstaat met een klik op de knop.\n        </Typography>\n\n        <Typography variant=\"body2\" className={classes.title}>\n            Uren die je al hebt ingevuld worden niet overschreven.\n        </Typography>\n    </>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}