{"version":3,"sources":["firebase/firebase.js","navigation/header.js","navigation/preLoad.js","hours/hoursConstants.js","hours/hoursGrid.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","Header","profile","classes","className","root","AppBar","position","Toolbar","Typography","variant","Button","component","NavLink","color","to","startIcon","displayName","height","minHeight","width","background","paper","marginTop","display","flexDirection","alignItems","avatar","margin","backgroundColor","PreLoad","Container","maxWidth","CssBaseline","Avatar","src","alt","columns","id","description","enabled","months","years","HoursGrid","props","HoursConstants","isTemplate","snackbarOpen","isLoading","fetchMonth","month","year","profileId","a","db","firestore","collection","get","response","instance","docs","find","doc","data","setState","prevState","console","log","fetchTemplate","days","handleClose","event","reason","type","currentYear","Date","getFullYear","currentMonth","getMonth","submitHours","bind","submitTemplate","handleClientInput","handleProjectInput","save","state","getDaysInMonth","expandColumns","client","project","isFinal","value","column","day","this","numberValue","Number","isNaN","checked","daysInAMonth","getDate","rows","i","push","dayOfTheWeek","getDay","date","worked","overtime","sick","holiday","publicHoliday","available","education","other","standBy","kilometers","explanation","row","isNotWeekend","map","x","reduce","total","currentValue","TableCell","align","key","TextField","inputProps","style","textAlign","onChange","handleChange","target","onBlur","size","set","then","docRef","catch","error","noValidate","autoComplete","Grid","container","direction","FormControl","InputLabel","Select","labelId","setMonth","MenuItem","label","FormControlLabel","control","Switch","makeFinal","TableContainer","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableBody","getRowClass","scope","hoursCell","TableFooter","getTotal","Snackbar","anchorOrigin","vertical","horizontal","onClose","open","autoHideDuration","message","React","Component","activeItem","palette","primary","item","hide","toolbar","justifyContent","padding","mixins","content","Boolean","window","location","hostname","match","ReactDOM","render","useState","setProfile","setIsLoading","useEffect","provider","auth","OAuthProvider","setCustomParameters","tenant","signInWithPopup","result","fetchProfile","user","goLogin","snapshot","microsoftId","uid","createNewProfile","newProfile","email","add","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9fb73e7.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAkvaF-lqt8ZxyBwcNlwrHhj-Pp3Ev54pI\",\n    authDomain: \"codezilla-hours.firebaseapp.com\",\n    databaseURL: \"https://codezilla-hours.firebaseio.com\",\n    projectId: \"codezilla-hours\",\n    storageBucket: \"codezilla-hours.appspot.com\",\n    messagingSenderId: \"634823174203\",\n    appId: \"1:634823174203:web:ca40af276111cfae66541e\",\n    measurementId: \"G-DR0KK33WCW\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\n\nconst useStyles = makeStyles(theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1\n    }\n}));\n\nexport default function Header({ profile }) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        CODEZILLA Hours\n                    </Typography>\n                    <Button component={NavLink} color=\"inherit\" to=\"/\">\n                        Urenstaat\n                    </Button>\n                    <Button component={NavLink} color=\"inherit\" to=\"/template\">\n                        Template\n                    </Button>\n                    <Button color=\"inherit\" startIcon={<AccountCircle />}>\n                        {profile.displayName}\n                    </Button>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        height: \"100%\",\n        minHeight: \"100%\",\n        width: \"100%\",\n        position: \"fixed\",\n        background: \"url('./bg-pattern-triangles.png') 0 0 repeat\"\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: \"transparent\"\n    }\n}));\n\nexport default function PreLoad() {\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <img\n                        src=\"./Icon-green.svg\"\n                        alt=\"CODEZILLA logo\"\n                        height=\"100%\"\n                        width=\"100%\"\n                    ></img>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h4\">\n                    CODEZILLA Hours\n                </Typography>\n                <Typography component=\"subtitle1\" variant=\"subtitle1\">\n                    Bezig met aanmelden...\n                </Typography>\n            </div>\n        </Container>\n    );\n}\n","export const columns = [\n    {\n        id: \"worked\",\n        description: \"Gewerkt\",\n        enabled: true\n    },\n    {\n        id: \"overtime\",\n        description: \"Overwerk\",\n        enabled: true\n    },\n    {\n        id: \"sick\",\n        description: \"Ziek\",\n        enabled: true\n    },\n    {\n        id: \"holiday\",\n        description: \"Verlof\",\n        enabled: true\n    },\n    {\n        id: \"publicHoliday\",\n        description: \"Feestdag\",\n        enabled: true\n    },\n    {\n        id: \"available\",\n        description: \"Beschikbaar\",\n        enabled: false\n    },\n    {\n        id: \"education\",\n        description: \"Opleiding\",\n        enabled: false\n    },\n    {\n        id: \"other\",\n        description: \"Overig\",\n        enabled: false\n    },\n    {\n        id: \"standBy\",\n        description: \"StandBy\",\n        enabled: false\n    },\n    {\n        id: \"kilometers\",\n        description: \"Kilometers\",\n        enabled: false\n    }\n];\n\nexport const months = [\n    {\n        id: 1,\n        description: \"Januari\"\n    },\n    {\n        id: 2,\n        description: \"Februari\"\n    },\n    {\n        id: 3,\n        description: \"Maart\"\n    },\n    {\n        id: 4,\n        description: \"April\"\n    },\n    {\n        id: 5,\n        description: \"Mei\"\n    },\n    {\n        id: 6,\n        description: \"Juni\"\n    },\n    {\n        id: 7,\n        description: \"Juli\"\n    },\n    {\n        id: 8,\n        description: \"Augustus\"\n    },\n    {\n        id: 9,\n        description: \"September\"\n    },\n    {\n        id: 10,\n        description: \"Oktober\"\n    },\n    {\n        id: 11,\n        description: \"November\"\n    },\n    {\n        id: 12,\n        description: \"December\"\n    }\n];\n\nexport const years = [2020, 2021, 2022, 2023, 2025];\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport firebase from \"../firebase/firebase\";\n\nimport * as HoursConstants from \"./hoursConstants\";\n\nclass HoursGrid extends React.Component {\n    columns = HoursConstants.columns;\n    months = HoursConstants.months;\n    years = HoursConstants.years;\n    isTemplate = false;\n    snackbarOpen = false;\n    isLoading = true;\n\n    constructor(props) {\n        super(props);\n\n        this.isTemplate = props.type === \"template\";\n        const currentYear = new Date().getFullYear();\n        const currentMonth = new Date().getMonth() + 1;\n\n        this.submitHours = this.submitHours.bind(this);\n        this.submitTemplate = this.submitTemplate.bind(this);\n        this.handleClientInput = this.handleClientInput.bind(this);\n        this.handleProjectInput = this.handleProjectInput.bind(this);\n        this.save = this.save.bind(this);\n\n        this.state = {\n            data: {\n                id: \"\",\n                days: this.getDaysInMonth(currentMonth, currentYear),\n                expandColumns: this.isTemplate,\n                month: currentMonth,\n                year: currentYear,\n                client: \"\",\n                project: \"\",\n                profileId: props.profile.id,\n                profile: props.profile,\n                isFinal: false\n            },\n            snackbarOpen: false\n        };\n\n        if (this.isTemplate) {\n            this.fetchTemplate(props.profile.id);\n        } else {\n            this.fetchMonth(currentMonth, currentYear, props.profile.id);\n        }\n    }\n\n    fetchMonth = async (month, year, profileId) => {\n        const db = firebase.firestore();\n        const response = await db.collection(\"months\").get();\n        const instance = response.docs.find(doc => {\n            const data = doc.data();\n            return (\n                data.month === month &&\n                data.year === year &&\n                data.profileId === profileId\n            );\n        });\n\n        if (instance) {\n            this.setState(prevState => {\n                prevState.data = instance.data();\n                prevState.data.id = instance.id;\n                console.log(prevState.data);\n                return prevState;\n            });\n        }\n\n        this.isLoading = false;\n    };\n\n    fetchTemplate = async profileId => {\n        const db = firebase.firestore();\n        const instance = await db\n            .collection(\"template\")\n            .doc(profileId)\n            .get();\n\n        if (instance) {\n            this.setState(prevState => {\n                prevState.data.days = instance.data().days;\n                prevState.data.id = instance.id;\n                return prevState;\n            });\n        }\n\n        this.isLoading = false;\n    };\n\n    handleChange(value, column, day) {\n        const days = this.state.data.days;\n        const numberValue = Number(value);\n        days[day][column] = isNaN(numberValue) ? \"\" : numberValue;\n        this.setState({ ...this.state.data, days: days });\n    }\n\n    expandColumns(checked) {\n        this.setState(prevState => {\n            prevState.data.expandColumns = checked;\n            return prevState;\n        });\n    }\n\n    setMonth(month, year) {\n        const days = this.getDaysInMonth(month, year);\n        this.setState(prevState => {\n            prevState.data.month = month;\n            prevState.data.year = year;\n            prevState.data.days = days;\n            return prevState;\n        });\n\n        this.fetchMonth(month, year, this.props.profile.id);\n    }\n\n    getDaysInMonth(month, year) {\n        const daysInAMonth = new Date(year, month, 0).getDate();\n        const rows = [];\n\n        for (let i = 1; i < daysInAMonth; i++) {\n            rows.push({\n                day: i,\n                dayOfTheWeek: new Date(year, month - 1, i).getDay(),\n                date: new Date(year, month - 1, i),\n                worked: \"\",\n                overtime: \"\",\n                sick: \"\",\n                holiday: \"\",\n                publicHoliday: \"\",\n                available: \"\",\n                education: \"\",\n                other: \"\",\n                standBy: \"\",\n                kilometers: \"\",\n                explanation: \"\"\n            });\n        }\n\n        return rows;\n    }\n\n    getRowClass(row) {\n        return this.isNotWeekend(row.dayOfTheWeek) ? \"\" : \"highlight\";\n    }\n\n    getTotal(column) {\n        const values = this.state.data.days.map(x => x[column]);\n        return values.reduce((total, currentValue) => {\n            return Number(total) + Number(currentValue);\n        });\n    }\n\n    isNotWeekend(dayOfTheWeek) {\n        return (dayOfTheWeek !== 0 && dayOfTheWeek !== 6) || this.isTemplate;\n    }\n\n    hoursCell(row, column) {\n        return (\n            <TableCell align=\"right\" key={row.day + \"-\" + column}>\n                {this.isNotWeekend(row.dayOfTheWeek) ? (\n                    <TextField\n                        id={column}\n                        inputProps={{\n                            style: {\n                                textAlign: \"right\"\n                            },\n                            day: row.day\n                        }}\n                        value={row[column]}\n                        onChange={event =>\n                            this.handleChange(\n                                event.target.value,\n                                column,\n                                row.day - 1\n                            )\n                        }\n                        onBlur={() => this.save(this.isTemplate)}\n                        size=\"small\"\n                    />\n                ) : null}\n            </TableCell>\n        );\n    }\n\n    handleClientInput(value) {\n        this.setState(prevState => {\n            prevState.data.client = value;\n            return prevState;\n        });\n    }\n\n    handleProjectInput(value) {\n        this.setState(prevState => {\n            prevState.data.project = value;\n            return prevState;\n        });\n    }\n\n    submitHours() {\n        console.log(this.state.data);\n        const db = firebase.firestore();\n        db.collection(\"months\")\n            .doc(\n                this.state.data.year +\n                    \"-\" +\n                    this.state.data.month +\n                    \"-\" +\n                    this.state.data.profile.displayName\n            )\n            .set(this.state.data)\n            .then(docRef => {\n                this.setState(prevState => {\n                    prevState.snackbarOpen = true;\n                    return prevState;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    }\n\n    submitTemplate() {\n        const data = this.state.data.days.map(day => {\n            delete day.date;\n            delete day.dayOfTheWeek;\n            return day;\n        });\n\n        const db = firebase.firestore();\n        db.collection(\"template\")\n            .doc(this.props.profile.id)\n            .set({ days: data })\n            .then(docRef => {\n                this.setState(prevState => {\n                    prevState.snackbarOpen = true;\n                    return prevState;\n                });\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n    }\n\n    save(isTemplate) {\n        if (isTemplate) {\n            this.submitTemplate();\n            return;\n        }\n        this.submitHours();\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n\n        this.setState(prevState => {\n            prevState.snackbarOpen = false;\n            return prevState;\n        });\n    };\n\n    makeFinal(checked, isTemplate) {\n        this.setState(prevState => {\n            prevState.data.isFinal = checked;\n            return prevState;\n        }, this.save(isTemplate));\n    }\n\n    render() {\n        return (\n            <form noValidate autoComplete=\"off\">\n                {!this.isTemplate ? (\n                    <Toolbar>\n                        <Grid container direction=\"row\" alignItems=\"flex-start\">\n                            <FormControl>\n                                <InputLabel id=\"select-month-label\">\n                                    Maand\n                                </InputLabel>\n                                <Select\n                                    labelId=\"select-month-label\"\n                                    id=\"select-month-label\"\n                                    value={this.state.data.month}\n                                    onChange={event =>\n                                        this.setMonth(\n                                            event.target.value,\n                                            this.state.data.year\n                                        )\n                                    }\n                                >\n                                    {this.months.map(month => {\n                                        return (\n                                            <MenuItem\n                                                value={month.id}\n                                                key={month.id}\n                                            >\n                                                {month.description}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                            </FormControl>\n                            <FormControl>\n                                <InputLabel id=\"select-year-label\">\n                                    Jaar\n                                </InputLabel>\n                                <Select\n                                    labelId=\"select-year-label\"\n                                    id=\"select-year-label\"\n                                    value={this.state.data.year}\n                                    onChange={event =>\n                                        this.setMonth(\n                                            this.state.data.month,\n                                            event.target.value\n                                        )\n                                    }\n                                >\n                                    {this.years.map(year => {\n                                        return (\n                                            <MenuItem value={year} key={year}>\n                                                {year}\n                                            </MenuItem>\n                                        );\n                                    })}\n                                </Select>\n                            </FormControl>\n                            <TextField\n                                id=\"client\"\n                                label=\"Klant\"\n                                value={this.state.data.client}\n                                onChange={event =>\n                                    this.handleClientInput(event.target.value)\n                                }\n                            />\n                            <TextField\n                                id=\"project\"\n                                label=\"Project\"\n                                value={this.state.data.project}\n                                onChange={event =>\n                                    this.handleProjectInput(event.target.value)\n                                }\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={this.state.data.expandColumns}\n                                        onChange={event =>\n                                            this.expandColumns(\n                                                event.target.checked\n                                            )\n                                        }\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Toon alle velden\"\n                            />\n                            <FormControlLabel\n                                control={\n                                    <Switch\n                                        checked={this.state.data.isFinal}\n                                        onChange={event =>\n                                            this.makeFinal(\n                                                event.target.checked,\n                                                this.isTemplate\n                                            )\n                                        }\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"Definitief\"\n                            />\n                        </Grid>\n                    </Toolbar>\n                ) : null}\n                <TableContainer component={Paper} className=\"hoursGrid\">\n                    <Table stickyHeader size=\"small\" aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell></TableCell>\n                                {this.columns.map(column => {\n                                    if (\n                                        !column.enabled &&\n                                        !this.state.data.expandColumns\n                                    ) {\n                                        return null;\n                                    }\n                                    return (\n                                        <TableCell\n                                            align=\"right\"\n                                            key={\"header-\" + column.id}\n                                        >\n                                            {column.description}\n                                        </TableCell>\n                                    );\n                                })}\n                                <TableCell align=\"right\">Toelichting</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {this.state.data.days.map(row => (\n                                <TableRow\n                                    key={row.day}\n                                    className={this.getRowClass(row)}\n                                >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.day}\n                                    </TableCell>\n                                    {this.columns.map(column => {\n                                        if (\n                                            !column.enabled &&\n                                            !this.state.data.expandColumns\n                                        ) {\n                                            return null;\n                                        }\n                                        return this.hoursCell(row, column.id);\n                                    })}\n                                    <TableCell align=\"right\">\n                                        {this.isNotWeekend(row.dayOfTheWeek) ? (\n                                            <TextField\n                                                id=\"explanation\"\n                                                inputProps={{\n                                                    day: row.day\n                                                }}\n                                                onBlur={event =>\n                                                    this.handleChange(\n                                                        event.target.value,\n                                                        \"explanation\",\n                                                        row.day\n                                                    )\n                                                }\n                                            />\n                                        ) : null}\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                        <TableFooter>\n                            <TableRow>\n                                <TableCell> Totaal</TableCell>\n                                {this.columns.map(column => {\n                                    if (\n                                        !column.enabled &&\n                                        !this.state.data.expandColumns\n                                    ) {\n                                        return null;\n                                    }\n                                    return (\n                                        <TableCell\n                                            align=\"right\"\n                                            key={\"footer-\" + column.id}\n                                        >\n                                            {this.getTotal(column.id)}\n                                        </TableCell>\n                                    );\n                                })}\n                                <TableCell align=\"right\"></TableCell>\n                            </TableRow>\n                        </TableFooter>\n                    </Table>\n                </TableContainer>\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"left\"\n                    }}\n                    onClose={this.handleClose}\n                    open={this.state.snackbarOpen}\n                    autoHideDuration={6000}\n                    message=\"Opgeslagen\"\n                />\n            </form>\n        );\n    }\n}\n\nexport default HoursGrid;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport firebase from \"./firebase/firebase\";\n\nimport Header from \"./navigation/header\";\nimport PreLoad from \"./navigation/preLoad\";\nimport HoursGrid from \"./hours/hoursGrid\";\n\nconst useStyles = makeStyles(theme => ({\n    activeItem: {\n        backgroundColor: theme.palette.primary[100]\n    },\n    item: {},\n    menuButton: {\n        marginRight: 36\n    },\n    hide: {\n        display: \"none\"\n    },\n    toolbar: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar\n    },\n    content: {\n        flexGrow: 1\n    },\n    title: {\n        margin: theme.spacing(0, 1)\n    }\n}));\n\nexport default function App() {\n    const classes = useStyles();\n    const [profile, setProfile] = React.useState({});\n    const [isLoading, setIsLoading] = React.useState(true);\n\n    const goLogin = () => {\n        const provider = new firebase.auth.OAuthProvider(\"microsoft.com\");\n\n        provider.setCustomParameters({\n            tenant: \"45c0a280-6475-473d-a8ee-a5684b93879c\"\n        });\n\n        firebase\n            .auth()\n            .signInWithPopup(provider)\n            .then(function(result) {\n                fetchProfile(result.user);\n            })\n            .catch(function(error) {\n                // Handle error.\n            });\n    };\n\n    React.useEffect(() => {\n        goLogin();\n    }, []);\n\n    const fetchProfile = async user => {\n        const db = firebase.firestore();\n        const snapshot = await db.collection(\"profile\").get();\n        const response = snapshot.docs.find(doc => {\n            return doc.data().microsoftId === user.uid;\n        });\n\n        if (!response) {\n            createNewProfile(user);\n            return;\n        }\n\n        const data = response.data();\n        data.id = response.id;\n        setProfile(data);\n        setIsLoading(false);\n    };\n\n    const createNewProfile = user => {\n        const db = firebase.firestore();\n        const newProfile = {\n            displayName: user.displayName,\n            microsoftId: user.uid,\n            email: user.email\n        };\n        db.collection(\"profile\")\n            .add(newProfile)\n            .then(docRef => {\n                newProfile.id = docRef.id;\n                setProfile(newProfile);\n            })\n            .catch(error => {\n                console.error(\"Error adding document: \", error);\n            });\n\n        setIsLoading(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            {!isLoading ? (\n                <Router>\n                    <CssBaseline />\n                    <Header profile={profile} />\n                    <Switch>\n                        <Route exact path=\"/\">\n                            <HoursGrid type=\"month\" profile={profile} />\n                        </Route>\n                        <Route path=\"/template\">\n                            <Typography\n                                variant=\"h4\"\n                                component=\"h4\"\n                                className={classes.title}\n                            >\n                                Template\n                            </Typography>\n                            <HoursGrid type=\"template\" profile={profile} />\n                        </Route>\n                    </Switch>\n                </Router>\n            ) : (\n                <PreLoad />\n            )}\n\n            <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-app.js\"></script>\n\n            <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-analytics.js\"></script>\n\n            <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-auth.js\"></script>\n            <script src=\"https://www.gstatic.com/firebasejs/7.11.0/firebase-firestore.js\"></script>\n        </div>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}